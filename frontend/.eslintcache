[{"/home/vrdevchris/rappaSite/frontend/src/index.js":"1","/home/vrdevchris/rappaSite/frontend/src/App.js":"2","/home/vrdevchris/rappaSite/frontend/src/reportWebVitals.js":"3","/home/vrdevchris/rappaSite/frontend/src/Screens/HomeScreen.js":"4","/home/vrdevchris/rappaSite/frontend/src/Screens/ProductScreen.js":"5","/home/vrdevchris/rappaSite/frontend/src/store.js":"6","/home/vrdevchris/rappaSite/frontend/src/reducers/productReducers.js":"7","/home/vrdevchris/rappaSite/frontend/src/constants/productConstants.js":"8","/home/vrdevchris/rappaSite/frontend/src/actions/productActions.js":"9","/home/vrdevchris/rappaSite/frontend/src/Screens/CartScreen.js":"10","/home/vrdevchris/rappaSite/frontend/src/reducers/cartReducers.js":"11","/home/vrdevchris/rappaSite/frontend/src/constants/cartConstants.js":"12","/home/vrdevchris/rappaSite/frontend/src/actions/cartActions.js":"13","/home/vrdevchris/rappaSite/frontend/src/Screens/SigninScreen.js":"14","/home/vrdevchris/rappaSite/frontend/src/actions/userActions.js":"15","/home/vrdevchris/rappaSite/frontend/src/constants/userConstants.js":"16","/home/vrdevchris/rappaSite/frontend/src/reducers/userReducers.js":"17","/home/vrdevchris/rappaSite/frontend/src/Screens/RegisterScreen.js":"18","/home/vrdevchris/rappaSite/frontend/src/Screens/ProductsScreen.js":"19","/home/vrdevchris/rappaSite/frontend/src/Screens/ShippingScreen.js":"20","/home/vrdevchris/rappaSite/frontend/src/components/CheckoutSteps.js":"21","/home/vrdevchris/rappaSite/frontend/src/Screens/PaymentScreen.js":"22","/home/vrdevchris/rappaSite/frontend/src/Screens/PlaceOrderScreen.js":"23","/home/vrdevchris/rappaSite/frontend/src/actions/orderActions.js":"24","/home/vrdevchris/rappaSite/frontend/src/constants/orderConstants.js":"25","/home/vrdevchris/rappaSite/frontend/src/reducers/orderReducers.js":"26","/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreen.js":"27","/home/vrdevchris/rappaSite/frontend/src/components/LoadingBox.js":"28","/home/vrdevchris/rappaSite/frontend/src/components/MessageBox.js":"29","/home/vrdevchris/rappaSite/frontend/src/Screens/ProfileScreen.js":"30","/home/vrdevchris/rappaSite/frontend/src/Screens/OrdersScreen.js":"31","/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreenStripe.js":"32","/home/vrdevchris/rappaSite/frontend/src/components/CardInput.js":"33","/home/vrdevchris/rappaSite/frontend/src/components/StripePayment.js":"34"},{"size":594,"mtime":1619126112808,"results":"35","hashOfConfig":"36"},{"size":4422,"mtime":1619126112798,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1611689308753,"results":"38","hashOfConfig":"36"},{"size":4457,"mtime":1619126112798,"results":"39","hashOfConfig":"36"},{"size":4007,"mtime":1616291412710,"results":"40","hashOfConfig":"36"},{"size":1604,"mtime":1616267149230,"results":"41","hashOfConfig":"36"},{"size":1981,"mtime":1615138212910,"results":"42","hashOfConfig":"36"},{"size":728,"mtime":1613180584340,"results":"43","hashOfConfig":"36"},{"size":2810,"mtime":1615420977900,"results":"44","hashOfConfig":"36"},{"size":3633,"mtime":1616295801820,"results":"45","hashOfConfig":"36"},{"size":1006,"mtime":1615138212910,"results":"46","hashOfConfig":"36"},{"size":210,"mtime":1615138212910,"results":"47","hashOfConfig":"36"},{"size":1209,"mtime":1615314859190,"results":"48","hashOfConfig":"36"},{"size":2549,"mtime":1616439810560,"results":"49","hashOfConfig":"36"},{"size":2053,"mtime":1615410821630,"results":"50","hashOfConfig":"36"},{"size":559,"mtime":1615138212910,"results":"51","hashOfConfig":"36"},{"size":1532,"mtime":1615138212910,"results":"52","hashOfConfig":"36"},{"size":2841,"mtime":1616457740490,"results":"53","hashOfConfig":"36"},{"size":8082,"mtime":1615240140530,"results":"54","hashOfConfig":"36"},{"size":2902,"mtime":1615138212910,"results":"55","hashOfConfig":"36"},{"size":394,"mtime":1615138212880,"results":"56","hashOfConfig":"36"},{"size":1616,"mtime":1615138212880,"results":"57","hashOfConfig":"36"},{"size":5219,"mtime":1615138212910,"results":"58","hashOfConfig":"36"},{"size":4263,"mtime":1615138212910,"results":"59","hashOfConfig":"36"},{"size":1137,"mtime":1615138212910,"results":"60","hashOfConfig":"36"},{"size":2977,"mtime":1615138212910,"results":"61","hashOfConfig":"36"},{"size":7117,"mtime":1619126112808,"results":"62","hashOfConfig":"36"},{"size":184,"mtime":1615138212910,"results":"63","hashOfConfig":"36"},{"size":186,"mtime":1615138212910,"results":"64","hashOfConfig":"36"},{"size":4741,"mtime":1616434840920,"results":"65","hashOfConfig":"36"},{"size":2530,"mtime":1615138212910,"results":"66","hashOfConfig":"36"},{"size":4852,"mtime":1619126112808,"results":"67","hashOfConfig":"36"},{"size":544,"mtime":1619126112808,"results":"68","hashOfConfig":"36"},{"size":3928,"mtime":1619126112808,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q4h5c7",{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"81"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"81"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"81"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"81"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/vrdevchris/rappaSite/frontend/src/index.js",[],"/home/vrdevchris/rappaSite/frontend/src/App.js",["150","151"],"/home/vrdevchris/rappaSite/frontend/src/reportWebVitals.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/HomeScreen.js",["152","153","154","155","156","157","158"],"/home/vrdevchris/rappaSite/frontend/src/Screens/ProductScreen.js",["159","160","161","162"],"import {Link} from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { detailsProduct } from '../actions/productActions';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { HashLink } from 'react-router-hash-link';\n\n\n\nfunction useHover(){\n    const ref = useRef();\n    const [hovered, setHovered] = useState(false);\n\n    const enter = () => setHovered(true);\n    const leave = () => setHovered(false);\n    \n    useEffect(() => {\n \n        ref.current.addEventListener('mouseenter', enter)\n        ref.current.addEventListener('mouseleave', leave)\n\n        return () => {\n            //\n        }\n    }, [])\n    \n    return[ref, hovered];\n}\n\n\nfunction ProductScreen (props) {\n\n    const [ref, hovered] = useHover();\n    const [qty, setQty] = useState(1);\n    const productDetails = useSelector(state => state.productDetails);\n    const { product, loading, error } = productDetails;\n    const dispatch = useDispatch();\n\n    console.log(hovered);\n\n    useEffect(() => {\n        dispatch(detailsProduct(props.match.params.id));\n        return () => {\n          //\n        };\n      }, []);\n\n      const handleAddToCart = () => {\n\n          props.history.push(\"/cart/\" + props.match.params.id + \"?qty=\" + qty) \n\n        }\n\n    return <div className=\"details-container\">\n        <div className=\"back-to-result\">\n            <HashLink to=\"/#products\" ref={ref}>\n                \n                {hovered ? \n                <img src=\"https://res.cloudinary.com/djrbfvpit/image/upload/v1616265424/circle_left_hover_us7qqa.png\"/>\n                : \n                <img src=\"https://res.cloudinary.com/djrbfvpit/image/upload/v1616262644/circled-left-2_usxejf.png\" />}\n\n                \n            </HashLink>\n        </div>\n        {loading? <div>Loading...</div>:\n        error? <div>{error}</div>: \n\n    (\n        <div className=\"details\">\n            <div className=\"details-image\">\n                <img src={product.image} alt=\"product\" />\n            </div>\n            <div className=\"details-info-action\">\n                <div className=\"details-info\">\n                    <ul>\n                        <li>\n                            <h4>{product.name}</h4>\n                        </li>\n                        <li className=\"rating-price\">\n                            <b>${product.price}</b>\n                            {product.rating} Stars ({product.numReviews} Reviews)\n                        </li>\n                        <li className=\"description\">\n                            <div className=\"description-head\">\n                                Description\n                            </div>\n                            \n                            <div>\n                                {product.description}\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n                <div className=\"details-action\">\n                            <div>\n                            Status: {product.countInStock > 0? <div className=\"instock\">In Stock</div> : \"Out Of Stock\"}\n                            </div>\n                            <div>\n                                <div>Qty:</div> <select value={qty} onChange={(e) => {setQty(e.target.value)}}>\n                                    {[...Array(product.countInStock).keys()].map(x =>\n                                    <option key={x+1} value={x+1}>{x+1}</option>\n                                        )}\n                                </select>\n                            </div>\n                            <div>\n                            {\n                            \n                            product.countInStock > 0 && \n                            <button  onClick={handleAddToCart} className=\"button primary\">Add to Cart</button>\n\n                            }\n                            </div>\n                </div>\n            </div>\n        </div>\n\n    \n    )\n    \n    }\n    </div> \n}\n\nexport default ProductScreen;\n\n\n",["163","164"],"/home/vrdevchris/rappaSite/frontend/src/store.js",["165","166"],"import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { productListReducer, productDetailsReducer, productSaveReducer, productDeleteReducer} from './reducers/productReducers';\nimport { cartReducer} from './reducers/cartReducers';\nimport Cookie from 'js-cookie';\nimport {userRegisterReducer, userSigninReducer, userUpdateReducer} from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, myOrderListReducer, orderListReducer, orderDeleteReducer } from './reducers/orderReducers';\n\n\nconst cartItems = Cookie.getJSON(\"cartItems\") || [];\nconst userInfo = Cookie.getJSON(\"userInfo\") || null;\n\n\nconst initialState = {\n    cart: { cartItems, shipping: {}, payment: {} },\n    userSignin: { userInfo },\n  };\n\nconst reducer = combineReducers({\n    productList: productListReducer, \n    productDetails: productDetailsReducer,\n    productSave: productSaveReducer,\n    productDelete: productDeleteReducer,\n    cart: cartReducer,\n    userSignin: userSigninReducer,\n    userRegister: userRegisterReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    userUpdate: userUpdateReducer,\n    myOrderList: myOrderListReducer,\n    orderList: orderListReducer,\n    orderDelete: orderDeleteReducer,\n})\n\n\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({trace: true}) || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","/home/vrdevchris/rappaSite/frontend/src/reducers/productReducers.js",[],"/home/vrdevchris/rappaSite/frontend/src/constants/productConstants.js",[],"/home/vrdevchris/rappaSite/frontend/src/actions/productActions.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/CartScreen.js",[],"/home/vrdevchris/rappaSite/frontend/src/reducers/cartReducers.js",[],"/home/vrdevchris/rappaSite/frontend/src/constants/cartConstants.js",[],"/home/vrdevchris/rappaSite/frontend/src/actions/cartActions.js",["167"],"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT, CART_SAVE_SHIPPING } from '../constants/cartConstants';\nimport Cookie from 'js-cookie';\n\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n\n  const {data} = await axios.get(\"/api/products/\" + productId);\n  const { cart: { cartItems } } = getState();\n\n  try{\n    dispatch({type: CART_ADD_ITEM, payload:{\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }});\n    \n    localStorage.setItem(\n      'cartItems',\n      JSON.stringify(getState().cart.cartItems))\n    \n    } catch (error) {\n    \n  }\n}\n\nconst removeFromCart = (productId) => (dispatch, getState) => {\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });  \n  const { cart: { cartItems } } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n}\n\nconst saveShipping = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_SHIPPING, payload: data});\n}\n\nconst savePayment = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_PAYMENT, payload: data});\n}\n\n\nexport { addToCart, removeFromCart, saveShipping, savePayment }","/home/vrdevchris/rappaSite/frontend/src/Screens/SigninScreen.js",["168","169","170","171"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { signin, register } from '../actions/userActions';\n\nfunction SigninScreen (props) {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n    const userSignin = useSelector(state => state.userSignin || {});\n    const { loading, userInfo, error } = userSignin;\n    const dispatch = useDispatch();\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1]: '/';\n    \n    function demoCreds(){\n        setEmail('demo@demo.com');\n        setPassword('demo');\n    }\n\n    useEffect(() => {\n        if(userInfo){\n            props.history.push(redirect);\n        }\n        return () => {\n          //\n        };\n      }, [userInfo]);\n\n\n    const submitHandler = (e) => {\n        dispatch(signin(email, password)); \n        e.preventDefault();\n    }\n\n    return <div className=\"form\">\n        <form onSubmit={submitHandler}>\n            <ul className=\"form-container\">\n                <li>\n                    <h2>Sign-In</h2>\n                </li>\n                <li>\n                    {loading && <div>Loading...</div>}\n                    {error && <div>{error}</div>}\n                </li>\n                <li>\n                    <label htmlFor=\"email\">\n                        Email\n                    </label>\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor=\"password\">\n                        Password\n                    </label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <button type=\"submit\" className=\"button primary\"> Sign In</button>\n                </li>\n                <li>\n                    <button type=\"submit\" className=\"button primary\" onClick={() => demoCreds()}> Demo </button>\n                </li>\n                <li>\n                    First time visiting?\n                </li>\n                <li>\n                    <Link to={redirect === \"/\" ? \"register\" : \"registers?redirect=\" + redirect} className=\"button text-center secondary\">Create your account!</Link>\n                </li>\n            </ul>\n        </form>\n    </div>\n}\n\nexport default SigninScreen;\n","/home/vrdevchris/rappaSite/frontend/src/actions/userActions.js",[],"/home/vrdevchris/rappaSite/frontend/src/constants/userConstants.js",[],"/home/vrdevchris/rappaSite/frontend/src/reducers/userReducers.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/RegisterScreen.js",["172","173"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { register } from '../actions/userActions';\n\nfunction RegisterScreen (props) {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [rePassword, setRePassword] = useState('');\n    const [password, setPassword] = useState('');\n    const userRegister = useSelector(state => state.userRegister || {});\n    const { loading, userInfo, error } = userRegister;\n    const dispatch = useDispatch();\n\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\n    useEffect(() => {\n        if(userInfo){\n            props.history.push(redirect);\n        }\n        return () => {\n          //\n        };\n      }, [userInfo]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(register(name, email, password));\n    }\n\n    return <div className=\"form\">\n        <form onSubmit={submitHandler}>\n            <ul className=\"form-container\">\n                <li>\n                    <h2>Create Account</h2>\n                </li>\n                <li>\n                    {loading && <div>Loading...</div>}\n                    {error && <div>{error}</div>}\n                </li>\n                <li>\n                    <label htmlFor=\"name\">\n                        Name\n                    </label>\n                    <input type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor=\"email\">\n                        Email\n                    </label>\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor=\"password\">\n                        Password\n                    </label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor=\"rePassword\">\n                        Re-Enter Password\n                    </label>\n                    <input type=\"Password\" name=\"rePassword\" id=\"rePassword\" onChange={(e) => setRePassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <button type=\"submit\" className=\"button primary\"> Sign Up </button>\n                </li>\n                <li>\n                    Already have an account? <Link to={redirect === \"/\" ? \"signin\" : \"signin?redirect=\" + redirect} className=\"button text-center secondary\">Sign In</Link>\n                </li>\n            </ul>\n        </form>\n    </div>\n}\n\n\n\nexport default RegisterScreen;\n","/home/vrdevchris/rappaSite/frontend/src/Screens/ProductsScreen.js",["174","175","176","177","178","179","180"],"import { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { listProducts, saveProduct, deleteProduct } from '../actions/productActions';\nimport { Redirect } from 'react-router-dom';\nimport HomeScreen from './HomeScreen';\n\n\n\nfunction ProductsScreen (props) {\n\n    const [modalVisible, setModalVisible] = useState(false);\n    const [id, setId] = useState('');\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [image, setImage] = useState('');\n    const [brand, setBrand] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState('');\n    const [description, setDescription] = useState('');\n    const dispatch = useDispatch();\n    const productList = useSelector((state) => state.productList)\n    const {loading, products, error} = productList;\n\n    const productSave = useSelector((state) => state.productSave || {});\n    const { loading: loadingSave, success: successSave, error: errorSave } = productSave;\n\n    const productDelete = useSelector((state) => state.productDelete || {});\n    const { loading: loadingDelete, success: successDelete, error: errorDelete } = productDelete;\n\n    useEffect(() => {\n        if(successSave || successDelete){\n            setModalVisible(false);\n\n        } else {\n            //\n        }\n        dispatch(listProducts());\n        \n        return () => {\n          //\n        };\n      }, [successSave, successDelete]);\n\n    const openModal = (product) => {\n        setModalVisible(true);\n        setId(product._id);\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n    }\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(saveProduct({\n            _id: id,\n            name, \n            price, \n            image, \n            brand, \n            category, \n            countInStock, \n            description\n        })\n        );\n\n    };\n\n    const deleteHandler = (product) => {\n        dispatch(deleteProduct(product._id))\n    }\n\n    return<div className=\"content content-margined\">\n\n        <div className=\"product-header\">\n            <h3>Products</h3>\n            <button className = \"button primary\" onClick={() => openModal({})}>Create Product</button>\n        </div>\n        {modalVisible &&\n            <div className=\"form\">\n                <form onSubmit={submitHandler}>\n                    <ul className=\"form-container\">\n                        <li>\n                            <h2>{id ? \"Update Product\" : \"Create Product\"}</h2>\n                        </li>\n                        <li>\n                            {loadingSave && <div>Loading...</div>}\n                            {errorSave && <div>{errorSave}</div>}\n                        </li>\n                        <li>\n                            <label htmlFor=\"name\">Name</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\" \n                            name=\"name\"\n                            value={name} \n                            id=\"name\" \n                            onChange={(e) => setName(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"price\">Price</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\" \n                            name=\"price\"\n                            value={price} \n                            id=\"price\" \n                            onChange={(e) => setPrice(e.target.value)}>   \n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"image\">Image</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\" \n                            name=\"image\"\n                            value={image} \n                            id=\"image\" \n                            onChange={(e) => setImage(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"brand\">Brand</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\" \n                            name=\"brand\"\n                            value={brand} \n                            id=\"brand\" \n                            onChange={(e) => setBrand(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"category\">Category</label>\n                            <input \n                            type=\"text\" \n                            placeholder=\"Required\"\n                            name=\"category\"\n                            value={category} \n                            id=\"category\" \n                            onChange={(e) => setCategory(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"countInStock\">Count In Stock</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\"\n                            name=\"countInStock\"\n                            value={countInStock} \n                            id=\"countInStock\" \n                            onChange={(e) => setCountInStock(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"description\">Description</label>\n                            <textarea \n                            name=\"description\"\n                            placeholder=\"Required\"\n                            value={description} \n                            id=\"description\" \n                            onChange={(e) => setDescription(e.target.value)}> \n                            </textarea>\n                        </li>\n                        <li>\n                            <button type=\"submit\" className=\"button primary\">{id ? \"Update\" : \"Create\"}</button>\n                        </li>\n                        <li>\n                            <button type=\"button\" className=\"button secondary\" onClick={() => setModalVisible(false)}>Back</button>\n                        </li>\n                    </ul>\n                </form>\n            </div>\n        }\n\n        <div className=\"product-list\">\n            <table className = \"table\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Price</th>\n                        <th>Category</th>\n                        <th>Brand</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {products.map((product) =>(\n                    <tr key={product._id}>\n                        <td>{product._id}</td>\n                        <td>{product.name}</td>\n                        <td>{product.price}</td>\n                        <td>{product.category}</td>\n                        <td>{product.brand}</td>\n                        <td>\n                            <button className=\"button\" onClick={() => openModal(product)}>Edit</button>\n                            {' '}\n                            <button className=\"button\" onClick={() => deleteHandler(product)}>Delete</button>\n                        </td>\n                    </tr>))}\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n}\n\nexport default ProductsScreen;\n","/home/vrdevchris/rappaSite/frontend/src/Screens/ShippingScreen.js",["181","182","183"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { saveShipping } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nfunction ShippingScreen (props) {\n\n    const [address, setAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zipCode, setZipcode] = useState('');\n    const [country, setCountry] = useState('');\n  \n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        //find a way to overwrite the information if the customer wants to change shipping address\n        \n        dispatch(saveShipping({address, city, state, zipCode, country}));\n        props.history.push('payment');\n    }\n\n    return <div>\n        <CheckoutSteps step1 step2></CheckoutSteps>\n        <div className=\"form\">\n            <form onSubmit={submitHandler}>\n                <ul className=\"form-container\">\n                    <li>\n                        <h2>Shipping Details</h2>\n                    </li>\n                    <li>\n\n                    </li>\n                    <li>\n                        <label htmlFor=\"name\">\n                            Address\n                        </label>\n                        <input type=\"text\" name=\"address\" id=\"address\" onChange={(e) => setAddress(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"city\">\n                            City\n                        </label>\n                        <input type=\"text\" name=\"city\" id=\"city\" onChange={(e) => setCity(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"state\">\n                            State\n                        </label>\n                        <input type=\"text\" name=\"state\" id=\"state\" onChange={(e) => setState(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"zipCode\">\n                            Zip Code\n                        </label>\n                        <input type=\"text\" name=\"zipCode\" id=\"zipCode\" onChange={(e) => setZipcode(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"country\">\n                            Country\n                        </label>\n                        <input type=\"text\" name=\"country\" id=\"country\" onChange={(e) => setCountry(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <button type=\"submit\" className=\"button primary\"> Continue </button>\n                    </li>\n                </ul>\n            </form>\n        </div>\n    </div>\n\n}\n\n\n\nexport default ShippingScreen;\n","/home/vrdevchris/rappaSite/frontend/src/components/CheckoutSteps.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/PaymentScreen.js",["184","185","186"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { savePayment } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nfunction PaymentScreen (props) {\n\n    const [paymentMethod, setPaymentMethod] = useState('');\n  \n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(savePayment({ paymentMethod }));\n        props.history.push('placeorder');\n    }\n\n    return <div>\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\n        <div className=\"form\">\n            <form onSubmit={submitHandler}>\n                <ul className=\"form-container\">\n                    <li>\n                        <h2>Payment</h2>\n                    </li>\n                    <li>\n\n                    </li>\n                    <li>\n                        <div>\n                            <input type=\"radio\" name=\"paymentMethod\" id=\"paymentMethod\" value=\"paypal\"\n                            onChange={(e) => setPaymentMethod(e.target.value)}>\n                            </input>\n                            <label htmlFor=\"paymentMethod\">\n                                Paypal\n                            </label>\n                        </div>\n                    </li>\n                    <li>\n                        <button type=\"submit\" className=\"button primary\"> Continue </button>\n                    </li>\n                </ul>\n            </form>\n        </div>\n    </div>\n\n}\n\n\n\nexport default PaymentScreen;\n","/home/vrdevchris/rappaSite/frontend/src/Screens/PlaceOrderScreen.js",["187","188"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\n\nfunction PlaceOrderScreen(props) {\n\n    const cart =  useSelector(state => state.cart);\n    const orderCreate = useSelector(state => state.orderCreate);\n    const { loading, success, error, order } = orderCreate;\n    const orderDetails = useSelector((state) => state.orderDetails);\n    console.log(orderDetails);\n\n    const { cartItems, shipping, payment } = cart;\n    if(!shipping.address){\n        props.history.push(\"/shipping\")\n    } else if (!payment.paymentMethod) {\n        props.history.push(\"/payment\")\n    }\n\n    const itemsPrice = cartItems.reduce((a, c) => a + c.price*c.qty, 0);\n    const shippingPrice = itemsPrice > 100 ? 0 : 10;\n    const taxPrice = 0.15 * itemsPrice;\n    const totalPrice = itemsPrice + shippingPrice + taxPrice;\n\n    const dispatch = useDispatch();\n\n    const placeOrderHandler = () =>{\n        console.log(\"this is the placeOrderHandler\")\n        dispatch(createOrder({\n            orderItems:\n            cartItems, \n            shipping, \n            payment, \n            itemsPrice, \n            shippingPrice, \n            taxPrice, \n            totalPrice\n        }))\n    }\n\n    useEffect(() => {\n        if(success){\n            props.history.push(`/order/${order._id}`);\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n\n    }, [dispatch, order, props.history, success]);\n\n    return <div>\n        <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\n        <div className=\"placeorder\">\n            <div className=\"placeorder-info\">\n                <div>\n                    <h3>\n                        Shipping\n                    </h3>\n                    <div>\n                        {cart.shipping.address}, {cart.shipping.city}, {cart.shipping.state}\n                        {cart.shipping.zipCode}, {cart.shipping.country}\n                    </div>\n                </div>\n                <div>\n                    <h3>Payment</h3>\n                    <div>\n                        Payment Method: {cart.payment.paymentMethod}\n                    </div>\n                </div>\n                <div>\n                    <ul className=\"cart-list-container\">\n                        <li>\n                            <h3>\n                                Shopping Cart\n                            </h3>\n                        \n                        <div>\n                            Price\n                        </div>\n                        </li>\n                            {\n                                cartItems.length === 0 ?\n                                <div>\n                                    Cart is empty\n                                </div>\n                                :\n                                cartItems.map(item =>\n                                <li key={ Math.random().toString(36).substr(2,9)}>\n                                    <div className = \"cart-image\">\n                                        <img src={item.image} alt=\"product\" />\n                                    </div>\n                                    <div className=\"cart-name\">\n                                        <div>\n                                            <Link to={\"/product/\" + item.product}>\n                                                {item.name}\n                                            </Link>\n                                        </div>\n                                        <div>\n                                            Qty: {item.qty}\n                                        </div>\n                                    </div>\n                                    <div className = \"cart-price\">\n                                        ${item.price}\n                                    </div>\n                                </li>  \n                                    )\n                            }\n                    </ul>\n                </div>    \n            </div>\n            <div className=\"placeorder-action\">\n                <ul>\n                    <li>\n                        <button className= \"button primary full-width\" onClick={placeOrderHandler} >Place Order</button>\n                    </li>\n                    <li>\n                       <h3>Order Summary</h3> \n                    </li>\n                    <li>\n                        <div>Items</div>\n                        <div>${itemsPrice}</div>\n                    </li>\n                    <li>\n                        <div>Shipping</div>\n                        <div>${shippingPrice}</div>\n                    </li>\n                    <li>\n                        <div>Tax</div>\n                        <div>${taxPrice}</div>\n                    </li>\n                    <li>\n                        <div>Order Total</div>\n                        <div>${totalPrice}</div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    \n}\n\nexport default PlaceOrderScreen;\n","/home/vrdevchris/rappaSite/frontend/src/actions/orderActions.js",[],"/home/vrdevchris/rappaSite/frontend/src/constants/orderConstants.js",[],"/home/vrdevchris/rappaSite/frontend/src/reducers/orderReducers.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreen.js",["189"],"/home/vrdevchris/rappaSite/frontend/src/components/LoadingBox.js",[],"/home/vrdevchris/rappaSite/frontend/src/components/MessageBox.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/ProfileScreen.js",["190","191"],"//made all this\n\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout, update } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\n\nfunction ProfileScreen(props) {\n\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userSignin = useSelector(state => state.userSignin) \n    const { userInfo } = userSignin;  \n\n    const handleLogout = () =>{\n        dispatch(logout());\n        props.history.push(\"/signin\");\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(update({ userId: userInfo._id, email, name, password}));\n    }\n\n    const userUpdate = useSelector(state => state.userUpdate);\n    const { loading, success, error } = userUpdate;\n\n    const myOrderList = useSelector(state => state.myOrderList);\n    const { loading: loadingOrders, orders, error: errorOrders } = myOrderList;\n\n    console.log(myOrderList);\n    console.log(orders);\n    \n    useEffect(() => {\n        if(userInfo){\n            setEmail(userInfo.email);\n            setName(userInfo.name);\n            setPassword(userInfo.password);\n        }\n        dispatch(listMyOrders());\n        return () => {\n            \n        }\n    }, [dispatch])\n\n    return <div className=\"profile\">\n        <div className=\"profile-info\">\n            <div className=\"form\">\n                <form onSubmit={submitHandler}>\n                    <ul className=\"form-container\">\n                        <li>\n                            <h2>User Profile</h2>\n                        </li>\n                        <li>\n                            {loading && <div>Loading...</div>}\n                            {error && <div>{error}</div>}\n                            {success && <div>Profile Saved Successfully</div>}\n                        </li>\n                        <li>\n                            <label htmlFor=\"name\">\n                                Name\n                            </label>\n                            <input value={name} type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}></input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"email\">\n                                Email\n                            </label>\n                            <input value={email} type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"password\">\n                                Password\n                            </label>\n                            <input value={password} type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)}></input>\n                        </li>\n                        <li>\n                            <button onClick={submitHandler} type=\"submit\" className=\"button primary full-width\"> Update </button>\n                        </li>\n                        <li>\n                            <button type=\"button\" onClick={handleLogout} type=\"submit\" className=\"button secondary full-width\"> Logout </button>\n                        </li>\n                        \n                    </ul>\n                </form>\n            </div>\n        </div>\n        <div className=\"profile-orders content-margin\">\n            <div className=\"orders-header\">Your Past Orders</div>\n            {\n                loadingOrders ? <div>Loading...</div>:\n                errorOrders ? <div>{errorOrders}</div> :\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>PAID</th>\n                            <th>ACTIONS</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map(order => <tr key={order._id}>\n                            <td>{order._id}</td>\n                            <td>{order.createdAt.substring(0,10)}</td>\n                            <td>{order.totalPrice}</td>\n                            <td>{order.isPaid}</td>\n                            <td>\n                                <Link to={\"/order/\" + order._id}>DETAILS</Link>\n                            </td>\n                        </tr>)}\n                    </tbody>\n                </table>\n            }\n        </div>\n    </div>\n}\n\nexport default ProfileScreen;\n\n","/home/vrdevchris/rappaSite/frontend/src/Screens/OrdersScreen.js",["192","193","194","195","196"],"import { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { listOrders, deleteOrder } from '../actions/orderActions';\n\n\nfunction OrdersScreen (props) {\n\n    const orderList = useSelector((state) => state.orderList);\n    const { loading, orders, error } = orderList;\n\n    const orderDelete = useSelector((state) => state.orderDelete || {});\n    const { loading: loadingDelete, success: successDelete, error: errorDelete } = orderDelete;\n\n    const dispatch = useDispatch();\n    console.log(orderList)\n\n    useEffect(() => {\n            dispatch(listOrders());\n        return () => {\n          //\n        };\n      }, [successDelete]);\n\n\n    const deleteHandler = (order) => {\n        dispatch(deleteOrder(order._id))\n    }\n\n    return loading ? <div>Loading...</div> :\n    <div className=\"content content-margined\">\n        <div className=\"order-header\">\n            <h3>Orders</h3>\n        </div>\n        <div className=\"order-list\">\n            <table className = \"table\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>DATE</th>\n                        <th>TOTAL</th>\n                        <th>USER</th>\n                        <th>PAID</th>\n                        <th>PAID AT</th>\n                        <th>DELIVERED</th>\n                        <th>DELIVERED AT</th>\n                        <th>ACTIONS</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {orders.map((order) =>(\n                    <tr key={order._id}>\n                        <td>{order._id}</td>\n                        <td>{order.createdAt}</td>\n                        <td>{order.totalPrice}</td>\n                        <td>{order.user.name}</td>\n                        <td>{order.isPaid.toString()}</td>\n                        <td>{order.paidAt}</td>\n                        <td>{order.isDelivered.toString()}</td>\n                        <td>{order.deliveredAt}</td>\n                        <td>\n                            <Link to={\"/order/\" + order._id} className=\"button seconday\" > Details </Link>\n                            {''}\n                            <button type=\"button\" onClick={() => deleteHandler(order)} className=\" button secondary\"> Delete </button>\n                        </td>\n                    </tr>))}\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n}\n\nexport default OrdersScreen;","/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreenStripe.js",["197","198"],"/home/vrdevchris/rappaSite/frontend/src/components/CardInput.js",[],"/home/vrdevchris/rappaSite/frontend/src/components/StripePayment.js",["199","200","201"],{"ruleId":"202","severity":1,"message":"203","line":12,"column":8,"nodeType":"204","messageId":"205","endLine":12,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":70,"column":15,"nodeType":"208","endLine":70,"endColumn":27},{"ruleId":"202","severity":1,"message":"209","line":17,"column":13,"nodeType":"204","messageId":"205","endLine":17,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":27,"column":8,"nodeType":"212","endLine":27,"endColumn":18,"suggestions":"213"},{"ruleId":"202","severity":1,"message":"214","line":29,"column":11,"nodeType":"204","messageId":"205","endLine":29,"endColumn":24},{"ruleId":"202","severity":1,"message":"215","line":34,"column":11,"nodeType":"204","messageId":"205","endLine":34,"endColumn":22},{"ruleId":"216","severity":1,"message":"217","line":43,"column":9,"nodeType":"208","endLine":43,"endColumn":126},{"ruleId":"216","severity":1,"message":"217","line":48,"column":9,"nodeType":"208","endLine":48,"endColumn":137},{"ruleId":"216","severity":1,"message":"217","line":53,"column":7,"nodeType":"208","endLine":53,"endColumn":105},{"ruleId":"202","severity":1,"message":"218","line":1,"column":9,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},{"ruleId":"210","severity":1,"message":"219","line":45,"column":10,"nodeType":"212","endLine":45,"endColumn":12,"suggestions":"220"},{"ruleId":"216","severity":1,"message":"217","line":58,"column":17,"nodeType":"208","endLine":58,"endColumn":120},{"ruleId":"216","severity":1,"message":"217","line":60,"column":17,"nodeType":"208","endLine":60,"endColumn":118},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":38,"column":69,"nodeType":"227","messageId":"228","endLine":38,"endColumn":71},{"ruleId":"225","severity":1,"message":"226","line":38,"column":131,"nodeType":"227","messageId":"228","endLine":38,"endColumn":133},{"ruleId":"202","severity":1,"message":"229","line":9,"column":19,"nodeType":"204","messageId":"205","endLine":9,"endColumn":28},{"ruleId":"202","severity":1,"message":"230","line":4,"column":18,"nodeType":"204","messageId":"205","endLine":4,"endColumn":26},{"ruleId":"202","severity":1,"message":"231","line":10,"column":12,"nodeType":"204","messageId":"205","endLine":10,"endColumn":16},{"ruleId":"202","severity":1,"message":"232","line":10,"column":18,"nodeType":"204","messageId":"205","endLine":10,"endColumn":25},{"ruleId":"210","severity":1,"message":"233","line":28,"column":10,"nodeType":"212","endLine":28,"endColumn":20,"suggestions":"234"},{"ruleId":"202","severity":1,"message":"235","line":10,"column":12,"nodeType":"204","messageId":"205","endLine":10,"endColumn":22},{"ruleId":"210","severity":1,"message":"233","line":24,"column":10,"nodeType":"212","endLine":24,"endColumn":20,"suggestions":"236"},{"ruleId":"202","severity":1,"message":"237","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":18},{"ruleId":"202","severity":1,"message":"238","line":5,"column":8,"nodeType":"204","messageId":"205","endLine":5,"endColumn":18},{"ruleId":"202","severity":1,"message":"239","line":22,"column":12,"nodeType":"204","messageId":"205","endLine":22,"endColumn":19},{"ruleId":"202","severity":1,"message":"240","line":22,"column":31,"nodeType":"204","messageId":"205","endLine":22,"endColumn":36},{"ruleId":"202","severity":1,"message":"241","line":28,"column":22,"nodeType":"204","messageId":"205","endLine":28,"endColumn":35},{"ruleId":"202","severity":1,"message":"242","line":28,"column":68,"nodeType":"204","messageId":"205","endLine":28,"endColumn":79},{"ruleId":"210","severity":1,"message":"211","line":42,"column":10,"nodeType":"212","endLine":42,"endColumn":38,"suggestions":"243"},{"ruleId":"202","severity":1,"message":"218","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":14},{"ruleId":"202","severity":1,"message":"244","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":21},{"ruleId":"202","severity":1,"message":"245","line":3,"column":17,"nodeType":"204","messageId":"205","endLine":3,"endColumn":26},{"ruleId":"202","severity":1,"message":"218","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":14},{"ruleId":"202","severity":1,"message":"244","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":21},{"ruleId":"202","severity":1,"message":"245","line":3,"column":17,"nodeType":"204","messageId":"205","endLine":3,"endColumn":26},{"ruleId":"202","severity":1,"message":"239","line":12,"column":13,"nodeType":"204","messageId":"205","endLine":12,"endColumn":20},{"ruleId":"202","severity":1,"message":"240","line":12,"column":31,"nodeType":"204","messageId":"205","endLine":12,"endColumn":36},{"ruleId":"210","severity":1,"message":"246","line":108,"column":6,"nodeType":"212","endLine":108,"endColumn":66,"suggestions":"247"},{"ruleId":"210","severity":1,"message":"248","line":49,"column":8,"nodeType":"212","endLine":49,"endColumn":18,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":86,"column":74,"nodeType":"252","endLine":86,"endColumn":87},{"ruleId":"202","severity":1,"message":"253","line":2,"column":28,"nodeType":"204","messageId":"205","endLine":2,"endColumn":36},{"ruleId":"202","severity":1,"message":"240","line":10,"column":30,"nodeType":"204","messageId":"205","endLine":10,"endColumn":35},{"ruleId":"202","severity":1,"message":"241","line":13,"column":22,"nodeType":"204","messageId":"205","endLine":13,"endColumn":35},{"ruleId":"202","severity":1,"message":"242","line":13,"column":68,"nodeType":"204","messageId":"205","endLine":13,"endColumn":79},{"ruleId":"210","severity":1,"message":"211","line":23,"column":10,"nodeType":"212","endLine":23,"endColumn":25,"suggestions":"254"},{"ruleId":"210","severity":1,"message":"246","line":37,"column":9,"nodeType":"212","endLine":37,"endColumn":69,"suggestions":"255"},{"ruleId":"202","severity":1,"message":"256","line":39,"column":9,"nodeType":"204","messageId":"205","endLine":39,"endColumn":29},{"ruleId":"202","severity":1,"message":"257","line":13,"column":20,"nodeType":"204","messageId":"205","endLine":13,"endColumn":30},{"ruleId":"202","severity":1,"message":"258","line":13,"column":60,"nodeType":"204","messageId":"205","endLine":13,"endColumn":68},{"ruleId":"210","severity":1,"message":"248","line":105,"column":4,"nodeType":"212","endLine":105,"endColumn":20,"suggestions":"259"},"no-unused-vars","'OrderScreen' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'product' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["260"],"'submitHandler' is assigned a value but never used.","'sortHandler' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["261"],"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'cartItems' is assigned a value but never used.","'register' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["264"],"'rePassword' is assigned a value but never used.",["265"],"'Redirect' is defined but never used.","'HomeScreen' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.",["266"],"'useSelector' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a duplicate dependency: 'successPay'. Either omit it or remove the dependency array.",["267"],"React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["268"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.",["269"],["270"],"'handleSuccessPayment' is assigned a value but never used.","'loadingPay' is assigned a value but never used.","'errorPay' is assigned a value but never used.",["271"],{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},"no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"276","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"281","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [category, dispatch]",{"range":"290","text":"291"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"292","text":"293"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"294","text":"295"},{"range":"296","text":"295"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"297","text":"298"},"Update the dependencies array to be: [dispatch, orderId, sdkReady, successPay, order]",{"range":"299","text":"300"},"Update the dependencies array to be: [dispatch, userInfo]",{"range":"301","text":"302"},"Update the dependencies array to be: [dispatch, successDelete]",{"range":"303","text":"304"},{"range":"305","text":"300"},"Update the dependencies array to be: [userInfo, userInfo.email]",{"range":"306","text":"307"},[766,776],"[category, dispatch]",[1131,1133],"[dispatch, props.match.params.id]",[877,887],"[props.history, redirect, userInfo]",[831,841],[1490,1518],"[successSave, successDelete, dispatch]",[3237,3297],"[dispatch, orderId, sdkReady, successPay, order]",[1414,1424],"[dispatch, userInfo]",[713,728],"[dispatch, successDelete]",[1102,1162],[3126,3142],"[userInfo, userInfo.email]"]