[{"/home/vrdevchris/rappaSite/frontend/src/index.js":"1","/home/vrdevchris/rappaSite/frontend/src/App.js":"2","/home/vrdevchris/rappaSite/frontend/src/reportWebVitals.js":"3","/home/vrdevchris/rappaSite/frontend/src/Screens/HomeScreen.js":"4","/home/vrdevchris/rappaSite/frontend/src/Screens/ProductScreen.js":"5","/home/vrdevchris/rappaSite/frontend/src/store.js":"6","/home/vrdevchris/rappaSite/frontend/src/reducers/productReducers.js":"7","/home/vrdevchris/rappaSite/frontend/src/constants/productConstants.js":"8","/home/vrdevchris/rappaSite/frontend/src/actions/productActions.js":"9","/home/vrdevchris/rappaSite/frontend/src/Screens/CartScreen.js":"10","/home/vrdevchris/rappaSite/frontend/src/reducers/cartReducers.js":"11","/home/vrdevchris/rappaSite/frontend/src/constants/cartConstants.js":"12","/home/vrdevchris/rappaSite/frontend/src/actions/cartActions.js":"13","/home/vrdevchris/rappaSite/frontend/src/Screens/SigninScreen.js":"14","/home/vrdevchris/rappaSite/frontend/src/actions/userActions.js":"15","/home/vrdevchris/rappaSite/frontend/src/constants/userConstants.js":"16","/home/vrdevchris/rappaSite/frontend/src/reducers/userReducers.js":"17","/home/vrdevchris/rappaSite/frontend/src/Screens/RegisterScreen.js":"18","/home/vrdevchris/rappaSite/frontend/src/Screens/ProductsScreen.js":"19","/home/vrdevchris/rappaSite/frontend/src/Screens/ShippingScreen.js":"20","/home/vrdevchris/rappaSite/frontend/src/components/CheckoutSteps.js":"21","/home/vrdevchris/rappaSite/frontend/src/Screens/PaymentScreen.js":"22","/home/vrdevchris/rappaSite/frontend/src/Screens/PlaceOrderScreen.js":"23","/home/vrdevchris/rappaSite/frontend/src/actions/orderActions.js":"24","/home/vrdevchris/rappaSite/frontend/src/constants/orderConstants.js":"25","/home/vrdevchris/rappaSite/frontend/src/reducers/orderReducers.js":"26","/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreen.js":"27","/home/vrdevchris/rappaSite/frontend/src/components/LoadingBox.js":"28","/home/vrdevchris/rappaSite/frontend/src/components/MessageBox.js":"29","/home/vrdevchris/rappaSite/frontend/src/Screens/ProfileScreen.js":"30","/home/vrdevchris/rappaSite/frontend/src/Screens/OrdersScreen.js":"31"},{"size":333,"mtime":1615311243720,"results":"32","hashOfConfig":"33"},{"size":3623,"mtime":1615503273130,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1611689308753,"results":"35","hashOfConfig":"33"},{"size":2701,"mtime":1615426886520,"results":"36","hashOfConfig":"33"},{"size":3080,"mtime":1615755692900,"results":"37","hashOfConfig":"33"},{"size":1604,"mtime":1615569129360,"results":"38","hashOfConfig":"33"},{"size":1981,"mtime":1615138212910,"results":"39","hashOfConfig":"33"},{"size":728,"mtime":1613180584340,"results":"40","hashOfConfig":"33"},{"size":2810,"mtime":1615420977900,"results":"41","hashOfConfig":"33"},{"size":3532,"mtime":1615314019380,"results":"42","hashOfConfig":"33"},{"size":1006,"mtime":1615138212910,"results":"43","hashOfConfig":"33"},{"size":210,"mtime":1615138212910,"results":"44","hashOfConfig":"33"},{"size":1209,"mtime":1615314859190,"results":"45","hashOfConfig":"33"},{"size":2239,"mtime":1615138212880,"results":"46","hashOfConfig":"33"},{"size":2053,"mtime":1615410821630,"results":"47","hashOfConfig":"33"},{"size":559,"mtime":1615138212910,"results":"48","hashOfConfig":"33"},{"size":1532,"mtime":1615138212910,"results":"49","hashOfConfig":"33"},{"size":2841,"mtime":1615138212880,"results":"50","hashOfConfig":"33"},{"size":8082,"mtime":1615240140530,"results":"51","hashOfConfig":"33"},{"size":2902,"mtime":1615138212910,"results":"52","hashOfConfig":"33"},{"size":394,"mtime":1615138212880,"results":"53","hashOfConfig":"33"},{"size":1616,"mtime":1615138212880,"results":"54","hashOfConfig":"33"},{"size":5219,"mtime":1615138212910,"results":"55","hashOfConfig":"33"},{"size":4263,"mtime":1615138212910,"results":"56","hashOfConfig":"33"},{"size":1137,"mtime":1615138212910,"results":"57","hashOfConfig":"33"},{"size":2977,"mtime":1615138212910,"results":"58","hashOfConfig":"33"},{"size":5411,"mtime":1615138212910,"results":"59","hashOfConfig":"33"},{"size":184,"mtime":1615138212910,"results":"60","hashOfConfig":"33"},{"size":186,"mtime":1615138212910,"results":"61","hashOfConfig":"33"},{"size":4659,"mtime":1615138212910,"results":"62","hashOfConfig":"33"},{"size":2530,"mtime":1615138212910,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"q4h5c7",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"66"},"/home/vrdevchris/rappaSite/frontend/src/index.js",[],["140","141"],"/home/vrdevchris/rappaSite/frontend/src/App.js",["142"],"import {BrowserRouter, Route, Link} from 'react-router-dom';\nimport HomeScreen from './Screens/HomeScreen';\nimport ProductScreen from './Screens/ProductScreen';\nimport CartScreen from './Screens/CartScreen';\nimport SigninScreen from './Screens/SigninScreen';\nimport RegisterScreen from './Screens/RegisterScreen';\nimport ProductsScreen from './Screens/ProductsScreen';\nimport { useSelector } from 'react-redux';\nimport ShippingScreen from './Screens/ShippingScreen';\nimport PaymentScreen from './Screens/PaymentScreen';\nimport PlaceOrderScreen from './Screens/PlaceOrderScreen';\nimport OrderScreen from './Screens/OrderScreen';\nimport ProfileScreen from './Screens/ProfileScreen';\nimport OrdersScreen from './Screens/OrdersScreen';\n\nfunction App() {\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  const userSignin = useSelector(state => state.userSignin);\n  const { userInfo } =  userSignin;\n  \n  const openMenu = () => {\n    document.querySelector(\".sidebar\").classList.add(\"open\");\n  }\n\n  const closeMenu = () => {\n    document.querySelector(\".sidebar\").classList.remove(\"open\");\n  }\n\n  return (\n  <BrowserRouter>\n    <div className=\"grid-container\">\n      <header className=\"header\">\n        <div className=\"brand\">\n          <button onClick={openMenu}>\n            &#9776;\n          </button>\n          <Link to=\"/\">Healthy Chef</Link>\n        </div>\n        <div className=\"header-links\">\n          <Link to=\"/cart\">\n            <span>Cart</span>\n            {cartItems.length > 0 && (\n                  <span className=\"badge\">{cartItems.length}</span>\n                )}\n          </Link>\n          {\n            userInfo ? <Link to=\"/profile\">{userInfo.name}</Link>:\n            <Link to=\"/signin\">Sign In</Link>\n          }\n          { userInfo && userInfo.isAdmin && (\n            <div className=\"dropdown\">\n              <a href=\"#\">Admin</a>\n              <ul className=\"dropdown-content\">\n                <li>\n                  <Link to=\"/orders\">Orders</Link>\n                  <Link to=\"/products\">Products</Link>\n                </li>\n              </ul>\n            </div>\n          )}\n        </div>\n      </header>\n      <aside className=\"sidebar\">\n        <button className=\"sidebar-close-button\" onClick={closeMenu}>x</button>\n        <ul className=\"categories\">\n          <li>\n            <Link to=\"/category/Pants\">Pants</Link>\n          </li>\n          <li>\n            <Link to=\"/category/Shirts\">Shirts</Link>\n          </li>\n        </ul>\n      </aside>\n      <main className=\"main\">\n        <div className=\"content\" />\n          <Route path=\"/orders\" exact={true} component={OrdersScreen} />\n          <Route path=\"/products\" exact={true} component={ProductsScreen} />\n          <Route path=\"/shipping\" exact={true} component={ShippingScreen} />\n          <Route path=\"/payment\" exact={true} component={PaymentScreen} />\n          <Route path=\"/placeorder\" exact={true} component={PlaceOrderScreen} />\n          <Route path=\"/\" exact={true} component={HomeScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id\"  component={CartScreen} />\n          <Route path=\"/category/:id\"  component={HomeScreen} />\n          <Route path=\"/signin\" component={SigninScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n      </main>\n      <footer className=\"footer\">\n        All Rights Reserved\n      </footer>\n    </div>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/vrdevchris/rappaSite/frontend/src/reportWebVitals.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/HomeScreen.js",["143","144"],"import React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listProducts } from '../actions/productActions';\n\nfunction HomeScreen (props) {\n\n    const [searchKeyword, setSearchKeyword] = useState('');\n    const [sortOrder, setSortOrder] = useState('');\n    const category = props.match.params.id ? props.match.params.id:'';\n    const productList = useSelector(state => state.productList);\n    const {products, loading, error} = productList;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(listProducts(category));\n        \n        return () => {\n            //\n        }\n    }, [category]);\n\n    const submitHandler = (e) => {\n      e.preventDefault();\n      dispatch(listProducts(category, searchKeyword, sortOrder))\n    } \n\n    const sortHandler = (e) => {\n      setSortOrder(e.target.value);\n      dispatch(listProducts(category, searchKeyword, sortOrder))\n    }\n\n    return (\n    <>\n      {category && <h2>{category}</h2>}\n      <ul className=\"filter\">\n        <li>\n          <form onSubmit={submitHandler}>\n            <input name=\"searchKeyword\" onChange={(e) => setSearchKeyword(e.target.value)} />\n            <button type=\"submit\">Search</button>\n          </form>\n        </li>\n        <li>\n        Sort By {''}\n          <select name=\"sortOrder\" onChange={sortHandler}>\n            <option value=\"\">Newest</option>\n            <option value=\"lowest\">Lowest</option>\n            <option value=\"highest\">Highest</option>\n          </select>\n        </li>\n      </ul>\n      {loading ? (\n        <div>Loading...</div>\n      ) : error? (\n        <div>{error}</div>\n      ) : (\n      <ul className=\"products\">\n            {products.map((product) => (\n              <li key={product._id}>\n                  <div className=\"product\">\n                    <Link to={'/product/' + product._id}>\n                    <img className=\"product-image\" src={product.image} alt=\"product\"/>\n                    </Link> \n                        <div className=\"product-name\">\n                          <Link to={'/product/' + product._id}>{product.name}</Link> \n                        </div>\n                        <div className=\"product-brand\">{product.name}</div>\n                        <div className=\"product-price\">${product.price}</div>\n                        <div className=\"product-rating\">{product.rating} Stars</div>\n                        <div className=\"product-rating\">{product.numReviews} Reviews</div>\n                      </div>\n              </li>\n              ))}\n        </ul>  \n      )}\n  </>\n  );\n}\n    \n\nexport default HomeScreen;","/home/vrdevchris/rappaSite/frontend/src/Screens/ProductScreen.js",["145"],"/home/vrdevchris/rappaSite/frontend/src/store.js",["146","147"],"import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { productListReducer, productDetailsReducer, productSaveReducer, productDeleteReducer} from './reducers/productReducers';\nimport { cartReducer} from './reducers/cartReducers';\nimport Cookie from 'js-cookie';\nimport {userRegisterReducer, userSigninReducer, userUpdateReducer} from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, myOrderListReducer, orderListReducer, orderDeleteReducer } from './reducers/orderReducers';\n\n\nconst cartItems = Cookie.getJSON(\"cartItems\") || [];\nconst userInfo = Cookie.getJSON(\"userInfo\") || null;\n\n\nconst initialState = {\n    cart: { cartItems, shipping: {}, payment: {} },\n    userSignin: { userInfo },\n  };\n\nconst reducer = combineReducers({\n    productList: productListReducer, \n    productDetails: productDetailsReducer,\n    productSave: productSaveReducer,\n    productDelete: productDeleteReducer,\n    cart: cartReducer,\n    userSignin: userSigninReducer,\n    userRegister: userRegisterReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    userUpdate: userUpdateReducer,\n    myOrderList: myOrderListReducer,\n    orderList: orderListReducer,\n    orderDelete: orderDeleteReducer,\n})\n\n\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({trace: true}) || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","/home/vrdevchris/rappaSite/frontend/src/reducers/productReducers.js",[],"/home/vrdevchris/rappaSite/frontend/src/constants/productConstants.js",[],"/home/vrdevchris/rappaSite/frontend/src/actions/productActions.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/CartScreen.js",[],"/home/vrdevchris/rappaSite/frontend/src/reducers/cartReducers.js",[],"/home/vrdevchris/rappaSite/frontend/src/constants/cartConstants.js",[],"/home/vrdevchris/rappaSite/frontend/src/actions/cartActions.js",["148"],"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT, CART_SAVE_SHIPPING } from '../constants/cartConstants';\nimport Cookie from 'js-cookie';\n\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n\n  const {data} = await axios.get(\"/api/products/\" + productId);\n  const { cart: { cartItems } } = getState();\n\n  try{\n    dispatch({type: CART_ADD_ITEM, payload:{\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }});\n    \n    localStorage.setItem(\n      'cartItems',\n      JSON.stringify(getState().cart.cartItems))\n    \n    } catch (error) {\n    \n  }\n}\n\nconst removeFromCart = (productId) => (dispatch, getState) => {\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });  \n  const { cart: { cartItems } } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n}\n\nconst saveShipping = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_SHIPPING, payload: data});\n}\n\nconst savePayment = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_PAYMENT, payload: data});\n}\n\n\nexport { addToCart, removeFromCart, saveShipping, savePayment }","/home/vrdevchris/rappaSite/frontend/src/Screens/SigninScreen.js",["149"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { signin } from '../actions/userActions';\n\nfunction SigninScreen (props) {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const userSignin = useSelector(state => state.userSignin || {});\n    const { loading, userInfo, error } = userSignin;\n    const dispatch = useDispatch();\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1]: '/';\n\n\n    useEffect(() => {\n        if(userInfo){\n            props.history.push(redirect);\n        }\n        return () => {\n          //\n        };\n      }, [userInfo]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(signin(email, password));\n    }\n\n    return <div className=\"form\">\n        <form onSubmit={submitHandler}>\n            <ul className=\"form-container\">\n                <li>\n                    <h2>Sign-In</h2>\n                </li>\n                <li>\n                    {loading && <div>Loading...</div>}\n                    {error && <div>{error}</div>}\n                </li>\n                <li>\n                    <label htmlFor=\"email\">\n                        Email\n                    </label>\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor=\"password\">\n                        Password\n                    </label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <button type=\"submit\" className=\"button primary\"> Sign In</button>\n                </li>\n                <li>\n                    First time visiting?\n                </li>\n                <li>\n                    <Link to={redirect === \"/\" ? \"register\" : \"registers?redirect=\" + redirect} className=\"button text-center secondary\">Create your account!</Link>\n                </li>\n            </ul>\n        </form>\n    </div>\n}\n\nexport default SigninScreen;\n","/home/vrdevchris/rappaSite/frontend/src/actions/userActions.js",[],"/home/vrdevchris/rappaSite/frontend/src/constants/userConstants.js",[],"/home/vrdevchris/rappaSite/frontend/src/reducers/userReducers.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/RegisterScreen.js",["150","151"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { register } from '../actions/userActions';\n\nfunction RegisterScreen (props) {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [rePassword, setRePassword] = useState('');\n    const [password, setPassword] = useState('');\n    const userRegister = useSelector(state => state.userRegister || {});\n    const { loading, userInfo, error } = userRegister;\n    const dispatch = useDispatch();\n\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\n    useEffect(() => {\n        if(userInfo){\n            props.history.push(redirect);\n        }\n        return () => {\n          //\n        };\n      }, [userInfo]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(register(name, email, password));\n    }\n\n    return <div className=\"form\">\n        <form onSubmit={submitHandler}>\n            <ul className=\"form-container\">\n                <li>\n                    <h2>Create Account</h2>\n                </li>\n                <li>\n                    {loading && <div>Loading...</div>}\n                    {error && <div>{error}</div>}\n                </li>\n                <li>\n                    <label htmlFor=\"name\">\n                        Name\n                    </label>\n                    <input type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor=\"email\">\n                        Email\n                    </label>\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor=\"password\">\n                        Password\n                    </label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <label htmlFor=\"rePassword\">\n                        Re-Enter Password\n                    </label>\n                    <input type=\"Password\" name=\"rePassword\" id=\"rePassword\" onChange={(e) => setRePassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <button type=\"submit\" className=\"button primary\"> Sign Up </button>\n                </li>\n                <li>\n                    Already have an account? <Link to={redirect === \"/\" ? \"signin\" : \"signin?redirect=\" + redirect} className=\"button text-center secondary\">Sign In</Link>\n                </li>\n            </ul>\n        </form>\n    </div>\n}\n\n\n\nexport default RegisterScreen;\n","/home/vrdevchris/rappaSite/frontend/src/Screens/ProductsScreen.js",["152","153","154","155","156","157","158"],"import { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { listProducts, saveProduct, deleteProduct } from '../actions/productActions';\nimport { Redirect } from 'react-router-dom';\nimport HomeScreen from './HomeScreen';\n\n\n\nfunction ProductsScreen (props) {\n\n    const [modalVisible, setModalVisible] = useState(false);\n    const [id, setId] = useState('');\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [image, setImage] = useState('');\n    const [brand, setBrand] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState('');\n    const [description, setDescription] = useState('');\n    const dispatch = useDispatch();\n    const productList = useSelector((state) => state.productList)\n    const {loading, products, error} = productList;\n\n    const productSave = useSelector((state) => state.productSave || {});\n    const { loading: loadingSave, success: successSave, error: errorSave } = productSave;\n\n    const productDelete = useSelector((state) => state.productDelete || {});\n    const { loading: loadingDelete, success: successDelete, error: errorDelete } = productDelete;\n\n    useEffect(() => {\n        if(successSave || successDelete){\n            setModalVisible(false);\n\n        } else {\n            //\n        }\n        dispatch(listProducts());\n        \n        return () => {\n          //\n        };\n      }, [successSave, successDelete]);\n\n    const openModal = (product) => {\n        setModalVisible(true);\n        setId(product._id);\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n    }\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(saveProduct({\n            _id: id,\n            name, \n            price, \n            image, \n            brand, \n            category, \n            countInStock, \n            description\n        })\n        );\n\n    };\n\n    const deleteHandler = (product) => {\n        dispatch(deleteProduct(product._id))\n    }\n\n    return<div className=\"content content-margined\">\n\n        <div className=\"product-header\">\n            <h3>Products</h3>\n            <button className = \"button primary\" onClick={() => openModal({})}>Create Product</button>\n        </div>\n        {modalVisible &&\n            <div className=\"form\">\n                <form onSubmit={submitHandler}>\n                    <ul className=\"form-container\">\n                        <li>\n                            <h2>{id ? \"Update Product\" : \"Create Product\"}</h2>\n                        </li>\n                        <li>\n                            {loadingSave && <div>Loading...</div>}\n                            {errorSave && <div>{errorSave}</div>}\n                        </li>\n                        <li>\n                            <label htmlFor=\"name\">Name</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\" \n                            name=\"name\"\n                            value={name} \n                            id=\"name\" \n                            onChange={(e) => setName(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"price\">Price</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\" \n                            name=\"price\"\n                            value={price} \n                            id=\"price\" \n                            onChange={(e) => setPrice(e.target.value)}>   \n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"image\">Image</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\" \n                            name=\"image\"\n                            value={image} \n                            id=\"image\" \n                            onChange={(e) => setImage(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"brand\">Brand</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\" \n                            name=\"brand\"\n                            value={brand} \n                            id=\"brand\" \n                            onChange={(e) => setBrand(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"category\">Category</label>\n                            <input \n                            type=\"text\" \n                            placeholder=\"Required\"\n                            name=\"category\"\n                            value={category} \n                            id=\"category\" \n                            onChange={(e) => setCategory(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"countInStock\">Count In Stock</label>\n                            <input \n                            type=\"text\"\n                            placeholder=\"Required\"\n                            name=\"countInStock\"\n                            value={countInStock} \n                            id=\"countInStock\" \n                            onChange={(e) => setCountInStock(e.target.value)}>\n                            </input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"description\">Description</label>\n                            <textarea \n                            name=\"description\"\n                            placeholder=\"Required\"\n                            value={description} \n                            id=\"description\" \n                            onChange={(e) => setDescription(e.target.value)}> \n                            </textarea>\n                        </li>\n                        <li>\n                            <button type=\"submit\" className=\"button primary\">{id ? \"Update\" : \"Create\"}</button>\n                        </li>\n                        <li>\n                            <button type=\"button\" className=\"button secondary\" onClick={() => setModalVisible(false)}>Back</button>\n                        </li>\n                    </ul>\n                </form>\n            </div>\n        }\n\n        <div className=\"product-list\">\n            <table className = \"table\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Price</th>\n                        <th>Category</th>\n                        <th>Brand</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {products.map((product) =>(\n                    <tr key={product._id}>\n                        <td>{product._id}</td>\n                        <td>{product.name}</td>\n                        <td>{product.price}</td>\n                        <td>{product.category}</td>\n                        <td>{product.brand}</td>\n                        <td>\n                            <button className=\"button\" onClick={() => openModal(product)}>Edit</button>\n                            {' '}\n                            <button className=\"button\" onClick={() => deleteHandler(product)}>Delete</button>\n                        </td>\n                    </tr>))}\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n}\n\nexport default ProductsScreen;\n","/home/vrdevchris/rappaSite/frontend/src/Screens/ShippingScreen.js",["159","160","161"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { saveShipping } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nfunction ShippingScreen (props) {\n\n    const [address, setAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zipCode, setZipcode] = useState('');\n    const [country, setCountry] = useState('');\n  \n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        //find a way to overwrite the information if the customer wants to change shipping address\n        \n        dispatch(saveShipping({address, city, state, zipCode, country}));\n        props.history.push('payment');\n    }\n\n    return <div>\n        <CheckoutSteps step1 step2></CheckoutSteps>\n        <div className=\"form\">\n            <form onSubmit={submitHandler}>\n                <ul className=\"form-container\">\n                    <li>\n                        <h2>Shipping Details</h2>\n                    </li>\n                    <li>\n\n                    </li>\n                    <li>\n                        <label htmlFor=\"name\">\n                            Address\n                        </label>\n                        <input type=\"text\" name=\"address\" id=\"address\" onChange={(e) => setAddress(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"city\">\n                            City\n                        </label>\n                        <input type=\"text\" name=\"city\" id=\"city\" onChange={(e) => setCity(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"state\">\n                            State\n                        </label>\n                        <input type=\"text\" name=\"state\" id=\"state\" onChange={(e) => setState(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"zipCode\">\n                            Zip Code\n                        </label>\n                        <input type=\"text\" name=\"zipCode\" id=\"zipCode\" onChange={(e) => setZipcode(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"country\">\n                            Country\n                        </label>\n                        <input type=\"text\" name=\"country\" id=\"country\" onChange={(e) => setCountry(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <button type=\"submit\" className=\"button primary\"> Continue </button>\n                    </li>\n                </ul>\n            </form>\n        </div>\n    </div>\n\n}\n\n\n\nexport default ShippingScreen;\n","/home/vrdevchris/rappaSite/frontend/src/components/CheckoutSteps.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/PaymentScreen.js",["162","163","164"],"import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { savePayment } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nfunction PaymentScreen (props) {\n\n    const [paymentMethod, setPaymentMethod] = useState('');\n  \n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(savePayment({ paymentMethod }));\n        props.history.push('placeorder');\n    }\n\n    return <div>\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\n        <div className=\"form\">\n            <form onSubmit={submitHandler}>\n                <ul className=\"form-container\">\n                    <li>\n                        <h2>Payment</h2>\n                    </li>\n                    <li>\n\n                    </li>\n                    <li>\n                        <div>\n                            <input type=\"radio\" name=\"paymentMethod\" id=\"paymentMethod\" value=\"paypal\"\n                            onChange={(e) => setPaymentMethod(e.target.value)}>\n                            </input>\n                            <label htmlFor=\"paymentMethod\">\n                                Paypal\n                            </label>\n                        </div>\n                    </li>\n                    <li>\n                        <button type=\"submit\" className=\"button primary\"> Continue </button>\n                    </li>\n                </ul>\n            </form>\n        </div>\n    </div>\n\n}\n\n\n\nexport default PaymentScreen;\n","/home/vrdevchris/rappaSite/frontend/src/Screens/PlaceOrderScreen.js",["165","166"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\n\nfunction PlaceOrderScreen(props) {\n\n    const cart =  useSelector(state => state.cart);\n    const orderCreate = useSelector(state => state.orderCreate);\n    const { loading, success, error, order } = orderCreate;\n    const orderDetails = useSelector((state) => state.orderDetails);\n    console.log(orderDetails);\n\n    const { cartItems, shipping, payment } = cart;\n    if(!shipping.address){\n        props.history.push(\"/shipping\")\n    } else if (!payment.paymentMethod) {\n        props.history.push(\"/payment\")\n    }\n\n    const itemsPrice = cartItems.reduce((a, c) => a + c.price*c.qty, 0);\n    const shippingPrice = itemsPrice > 100 ? 0 : 10;\n    const taxPrice = 0.15 * itemsPrice;\n    const totalPrice = itemsPrice + shippingPrice + taxPrice;\n\n    const dispatch = useDispatch();\n\n    const placeOrderHandler = () =>{\n        console.log(\"this is the placeOrderHandler\")\n        dispatch(createOrder({\n            orderItems:\n            cartItems, \n            shipping, \n            payment, \n            itemsPrice, \n            shippingPrice, \n            taxPrice, \n            totalPrice\n        }))\n    }\n\n    useEffect(() => {\n        if(success){\n            props.history.push(`/order/${order._id}`);\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n\n    }, [dispatch, order, props.history, success]);\n\n    return <div>\n        <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\n        <div className=\"placeorder\">\n            <div className=\"placeorder-info\">\n                <div>\n                    <h3>\n                        Shipping\n                    </h3>\n                    <div>\n                        {cart.shipping.address}, {cart.shipping.city}, {cart.shipping.state}\n                        {cart.shipping.zipCode}, {cart.shipping.country}\n                    </div>\n                </div>\n                <div>\n                    <h3>Payment</h3>\n                    <div>\n                        Payment Method: {cart.payment.paymentMethod}\n                    </div>\n                </div>\n                <div>\n                    <ul className=\"cart-list-container\">\n                        <li>\n                            <h3>\n                                Shopping Cart\n                            </h3>\n                        \n                        <div>\n                            Price\n                        </div>\n                        </li>\n                            {\n                                cartItems.length === 0 ?\n                                <div>\n                                    Cart is empty\n                                </div>\n                                :\n                                cartItems.map(item =>\n                                <li key={ Math.random().toString(36).substr(2,9)}>\n                                    <div className = \"cart-image\">\n                                        <img src={item.image} alt=\"product\" />\n                                    </div>\n                                    <div className=\"cart-name\">\n                                        <div>\n                                            <Link to={\"/product/\" + item.product}>\n                                                {item.name}\n                                            </Link>\n                                        </div>\n                                        <div>\n                                            Qty: {item.qty}\n                                        </div>\n                                    </div>\n                                    <div className = \"cart-price\">\n                                        ${item.price}\n                                    </div>\n                                </li>  \n                                    )\n                            }\n                    </ul>\n                </div>    \n            </div>\n            <div className=\"placeorder-action\">\n                <ul>\n                    <li>\n                        <button className= \"button primary full-width\" onClick={placeOrderHandler} >Place Order</button>\n                    </li>\n                    <li>\n                       <h3>Order Summary</h3> \n                    </li>\n                    <li>\n                        <div>Items</div>\n                        <div>${itemsPrice}</div>\n                    </li>\n                    <li>\n                        <div>Shipping</div>\n                        <div>${shippingPrice}</div>\n                    </li>\n                    <li>\n                        <div>Tax</div>\n                        <div>${taxPrice}</div>\n                    </li>\n                    <li>\n                        <div>Order Total</div>\n                        <div>${totalPrice}</div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    \n}\n\nexport default PlaceOrderScreen;\n","/home/vrdevchris/rappaSite/frontend/src/actions/orderActions.js",[],"/home/vrdevchris/rappaSite/frontend/src/constants/orderConstants.js",[],"/home/vrdevchris/rappaSite/frontend/src/reducers/orderReducers.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreen.js",["167"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { detailsOrder, payOrder } from '../actions/orderActions';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport Axios from 'axios';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\n\n\nfunction OrderScreen(props) {\n\n  const orderId = props.match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay, error: errorPay } = orderPay;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log(\"this is the useEffect from Orderscreen\")\n    const addPayPalScript = async () => {\n      const { data } = await Axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (\n      !order ||\n      successPay ||\n      (order && order._id !== orderId)\n    ) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch(detailsOrder(orderId));\n    } else {\n      if (!order.isPaid) {\n        if (!window.paypal) {\n          addPayPalScript();\n        } else {\n          setSdkReady(true);\n        }\n      }\n    }\n  }, [dispatch, orderId, sdkReady, successPay, order, successPay]);\n\n  const handleSuccessPayment = (paymentResult) => {\n    dispatch(payOrder(order, paymentResult));\n  }\n\n\n  return loading ? (\n    <LoadingBox></LoadingBox> \n    ) : error ? (\n      <MessageBox variant=\"danger\">{error}</MessageBox>\n    ) : (\n\n    <div>\n      <div className=\"placeorder\">\n        <div className=\"placeorder-info\">\n          <div>\n            <h3>\n              Shipping\n          </h3>\n            <div>\n              {order.shipping.address}, {order.shipping.city}, {order.shipping.state}\n              {order.shipping.zipCode}, {order.shipping.country}\n            </div>\n            <div>\n              {order.isDelivered ? (\n                <MessageBox variant=\"success\">Delivered at {order.deliveredAt}</MessageBox>\n              ) : (\n                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n              )}\n            </div>\n          </div>\n          <div>\n            <h3>Payment</h3>\n            <div>\n              Payment Method: {order.payment.paymentMethod}\n            </div>\n            <div>\n              {order.isPaid ? \"Paid at \" + order.paidAt : \"Not Paid.\"}\n            </div>\n          </div>\n          <div>\n            <ul className=\"cart-list-container\">\n              <li>\n                <h3>\n                  Shopping Cart\n          </h3>\n                <div>\n                  Price\n          </div>\n              </li>\n              {\n                order.orderItems.length === 0 ?\n                  <div>\n                    Cart is empty\n          </div>\n                  :\n                  order.orderItems.map(item =>\n                    <li key={item._id}>\n                      <div className=\"cart-image\">\n                        <img src={item.image} alt=\"product\" />\n                      </div>\n                      <div className=\"cart-name\">\n                        <div>\n                          <Link to={\"/product/\" + item.product}>\n                            {item.name}\n                          </Link>\n\n                        </div>\n                        <div>\n                          Qty: {item.qty}\n                        </div>\n                      </div>\n                      <div className=\"cart-price\">\n                        ${item.price}\n                      </div>\n                    </li>\n                  )\n              }\n            </ul>\n          </div>\n\n\n        </div>\n        <div className=\"placeorder-action\">\n          <ul>\n            {!order.isPaid && (\n            <li className=\"placeorder-actions-payment\">\n              {!sdkReady ? (\n                <div>Loading...</div>\n              ) : (\n                <>\n                {errorPay && (\n                  <div>{errorPay}</div>\n                )}\n                {loadingPay && (\n                  <div>Loading...</div>\n                )}\n                <PayPalButton amount={order.totalPrice} onSuccess={handleSuccessPayment}></PayPalButton>\n                \n                </>\n              )}\n            </li>\n            )}\n            <li>\n              <h3>Order Summary</h3>\n            </li>\n            <li>\n              <div>Items</div>\n              <div>${order.itemsPrice}</div>\n            </li>\n            <li>\n              <div>Shipping</div>\n              <div>${order.shippingPrice}</div>\n            </li>\n            <li>\n              <div>Tax</div>\n              <div>${order.taxPrice}</div>\n            </li>\n            <li>\n              <div>Order Total</div>\n              <div>${order.totalPrice}</div>\n            </li>\n          </ul>\n\n\n\n        </div>\n\n      </div>\n    </div>\n\n)}\n\nexport default OrderScreen;\n","/home/vrdevchris/rappaSite/frontend/src/components/LoadingBox.js",[],"/home/vrdevchris/rappaSite/frontend/src/components/MessageBox.js",[],"/home/vrdevchris/rappaSite/frontend/src/Screens/ProfileScreen.js",["168","169"],"//made all this\n\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout, update } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\n\nfunction ProfileScreen(props) {\n\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userSignin = useSelector(state => state.userSignin) \n    const { userInfo } = userSignin;  \n\n    const handleLogout = () =>{\n        dispatch(logout());\n        props.history.push(\"/signin\");\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(update({ userId: userInfo._id, email, name, password}));\n    }\n\n    const userUpdate = useSelector(state => state.userUpdate);\n    const { loading, success, error } = userUpdate;\n\n    const myOrderList = useSelector(state => state.myOrderList);\n    const { loading: loadingOrders, orders, error: errorOrders } = myOrderList;\n\n    console.log(myOrderList);\n    console.log(orders);\n    \n    useEffect(() => {\n        if(userInfo){\n            setEmail(userInfo.email);\n            setName(userInfo.name);\n            setPassword(userInfo.password);\n        }\n        dispatch(listMyOrders());\n        return () => {\n            \n        }\n    }, [dispatch])\n\n    return <div className=\"profile\">\n        <div className=\"profile-info\">\n            <div className=\"form\">\n                <form onSubmit={submitHandler}>\n                    <ul className=\"form-container\">\n                        <li>\n                            <h2>User Profile</h2>\n                        </li>\n                        <li>\n                            {loading && <div>Loading...</div>}\n                            {error && <div>{error}</div>}\n                            {success && <div>Profile Saved Successfully</div>}\n                        </li>\n                        <li>\n                            <label htmlFor=\"name\">\n                                Name\n                            </label>\n                            <input value={name} type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}></input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"email\">\n                                Email\n                            </label>\n                            <input value={email} type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}></input>\n                        </li>\n                        <li>\n                            <label htmlFor=\"password\">\n                                Password\n                            </label>\n                            <input value={password} type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)}></input>\n                        </li>\n                        <li>\n                            <button onClick={submitHandler} type=\"submit\" className=\"button primary full-width\"> Update </button>\n                        </li>\n                        <li>\n                            <button type=\"button\" onClick={handleLogout} type=\"submit\" className=\"button secondary full-width\"> Logout </button>\n                        </li>\n                        \n                    </ul>\n                </form>\n            </div>\n        </div>\n        <div className=\"profile-orders content-margin\">\n            {\n                loadingOrders ? <div>Loading...</div>:\n                errorOrders ? <div>{errorOrders}</div> :\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>PAID</th>\n                            <th>ACTIONS</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map(order => <tr key={order._id}>\n                            <td>{order._id}</td>\n                            <td>{order.createdAt}</td>\n                            <td>{order.totalPrice}</td>\n                            <td>{order.isPaid}</td>\n                            <td>\n                                <Link to={\"/order/\" + order._id}>DETAILS</Link>\n                            </td>\n                        </tr>)}\n                    </tbody>\n                </table>\n            }\n        </div>\n    </div>\n}\n\nexport default ProfileScreen;\n\n","/home/vrdevchris/rappaSite/frontend/src/Screens/OrdersScreen.js",["170","171","172","173","174"],"import { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { listOrders, deleteOrder } from '../actions/orderActions';\n\n\nfunction OrdersScreen (props) {\n\n    const orderList = useSelector((state) => state.orderList);\n    const { loading, orders, error } = orderList;\n\n    const orderDelete = useSelector((state) => state.orderDelete || {});\n    const { loading: loadingDelete, success: successDelete, error: errorDelete } = orderDelete;\n\n    const dispatch = useDispatch();\n    console.log(orderList)\n\n    useEffect(() => {\n            dispatch(listOrders());\n        return () => {\n          //\n        };\n      }, [successDelete]);\n\n\n    const deleteHandler = (order) => {\n        dispatch(deleteOrder(order._id))\n    }\n\n    return loading ? <div>Loading...</div> :\n    <div className=\"content content-margined\">\n        <div className=\"order-header\">\n            <h3>Orders</h3>\n        </div>\n        <div className=\"order-list\">\n            <table className = \"table\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>DATE</th>\n                        <th>TOTAL</th>\n                        <th>USER</th>\n                        <th>PAID</th>\n                        <th>PAID AT</th>\n                        <th>DELIVERED</th>\n                        <th>DELIVERED AT</th>\n                        <th>ACTIONS</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {orders.map((order) =>(\n                    <tr key={order._id}>\n                        <td>{order._id}</td>\n                        <td>{order.createdAt}</td>\n                        <td>{order.totalPrice}</td>\n                        <td>{order.user.name}</td>\n                        <td>{order.isPaid.toString()}</td>\n                        <td>{order.paidAt}</td>\n                        <td>{order.isDelivered.toString()}</td>\n                        <td>{order.deliveredAt}</td>\n                        <td>\n                            <Link to={\"/order/\" + order._id} className=\"button seconday\" > Details </Link>\n                            {''}\n                            <button type=\"button\" onClick={() => deleteHandler(order)} className=\" button secondary\"> Delete </button>\n                        </td>\n                    </tr>))}\n                </tbody>\n            </table>\n        </div>\n    </div>\n\n}\n\nexport default OrdersScreen;",{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":55,"column":15,"nodeType":"181","endLine":55,"endColumn":27},{"ruleId":"182","severity":1,"message":"183","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":13},{"ruleId":"186","severity":1,"message":"187","line":22,"column":8,"nodeType":"188","endLine":22,"endColumn":18,"suggestions":"189"},{"ruleId":"186","severity":1,"message":"190","line":18,"column":10,"nodeType":"188","endLine":18,"endColumn":12,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":38,"column":69,"nodeType":"194","messageId":"195","endLine":38,"endColumn":71},{"ruleId":"192","severity":1,"message":"193","line":38,"column":131,"nodeType":"194","messageId":"195","endLine":38,"endColumn":133},{"ruleId":"182","severity":1,"message":"196","line":9,"column":19,"nodeType":"184","messageId":"185","endLine":9,"endColumn":28},{"ruleId":"186","severity":1,"message":"197","line":23,"column":10,"nodeType":"188","endLine":23,"endColumn":20,"suggestions":"198"},{"ruleId":"182","severity":1,"message":"199","line":10,"column":12,"nodeType":"184","messageId":"185","endLine":10,"endColumn":22},{"ruleId":"186","severity":1,"message":"197","line":24,"column":10,"nodeType":"188","endLine":24,"endColumn":20,"suggestions":"200"},{"ruleId":"182","severity":1,"message":"201","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":18},{"ruleId":"182","severity":1,"message":"202","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":18},{"ruleId":"182","severity":1,"message":"203","line":22,"column":12,"nodeType":"184","messageId":"185","endLine":22,"endColumn":19},{"ruleId":"182","severity":1,"message":"204","line":22,"column":31,"nodeType":"184","messageId":"185","endLine":22,"endColumn":36},{"ruleId":"182","severity":1,"message":"205","line":28,"column":22,"nodeType":"184","messageId":"185","endLine":28,"endColumn":35},{"ruleId":"182","severity":1,"message":"206","line":28,"column":68,"nodeType":"184","messageId":"185","endLine":28,"endColumn":79},{"ruleId":"186","severity":1,"message":"187","line":42,"column":10,"nodeType":"188","endLine":42,"endColumn":38,"suggestions":"207"},{"ruleId":"182","severity":1,"message":"208","line":1,"column":10,"nodeType":"184","messageId":"185","endLine":1,"endColumn":14},{"ruleId":"182","severity":1,"message":"209","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":21},{"ruleId":"182","severity":1,"message":"210","line":3,"column":17,"nodeType":"184","messageId":"185","endLine":3,"endColumn":26},{"ruleId":"182","severity":1,"message":"208","line":1,"column":10,"nodeType":"184","messageId":"185","endLine":1,"endColumn":14},{"ruleId":"182","severity":1,"message":"209","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":21},{"ruleId":"182","severity":1,"message":"210","line":3,"column":17,"nodeType":"184","messageId":"185","endLine":3,"endColumn":26},{"ruleId":"182","severity":1,"message":"203","line":12,"column":13,"nodeType":"184","messageId":"185","endLine":12,"endColumn":20},{"ruleId":"182","severity":1,"message":"204","line":12,"column":31,"nodeType":"184","messageId":"185","endLine":12,"endColumn":36},{"ruleId":"186","severity":1,"message":"211","line":53,"column":6,"nodeType":"188","endLine":53,"endColumn":66,"suggestions":"212"},{"ruleId":"186","severity":1,"message":"213","line":49,"column":8,"nodeType":"188","endLine":49,"endColumn":18,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":86,"column":74,"nodeType":"217","endLine":86,"endColumn":87},{"ruleId":"182","severity":1,"message":"218","line":2,"column":28,"nodeType":"184","messageId":"185","endLine":2,"endColumn":36},{"ruleId":"182","severity":1,"message":"204","line":10,"column":30,"nodeType":"184","messageId":"185","endLine":10,"endColumn":35},{"ruleId":"182","severity":1,"message":"205","line":13,"column":22,"nodeType":"184","messageId":"185","endLine":13,"endColumn":35},{"ruleId":"182","severity":1,"message":"206","line":13,"column":68,"nodeType":"184","messageId":"185","endLine":13,"endColumn":79},{"ruleId":"186","severity":1,"message":"187","line":23,"column":10,"nodeType":"188","endLine":23,"endColumn":25,"suggestions":"219"},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["222"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["223"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'cartItems' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["224"],"'rePassword' is assigned a value but never used.",["225"],"'Redirect' is defined but never used.","'HomeScreen' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.",["226"],"'Link' is defined but never used.","'useSelector' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a duplicate dependency: 'successPay'. Either omit it or remove the dependency array.",["227"],"React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["228"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.",["229"],"no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"234","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [category, dispatch]",{"range":"245","text":"246"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"247","text":"248"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"249","text":"250"},{"range":"251","text":"250"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"252","text":"253"},"Update the dependencies array to be: [dispatch, orderId, sdkReady, successPay, order]",{"range":"254","text":"255"},"Update the dependencies array to be: [dispatch, userInfo]",{"range":"256","text":"257"},"Update the dependencies array to be: [dispatch, successDelete]",{"range":"258","text":"259"},[729,739],"[category, dispatch]",[580,582],"[dispatch, props.match.params.id]",[725,735],"[props.history, redirect, userInfo]",[831,841],[1490,1518],"[successSave, successDelete, dispatch]",[1717,1777],"[dispatch, orderId, sdkReady, successPay, order]",[1414,1424],"[dispatch, userInfo]",[713,728],"[dispatch, successDelete]"]