{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST } from '../constants/productConstants';\nimport axios from 'axios';\nimport Axios from 'axios';\n\nconst listProducts = (category = '', searchKeyword = '', sortOrder = '') => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products?category=' + category + \"&searchKeyword=\" + searchKeyword + \"&sortOrder=\" + sortOrder);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProduct = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete('/api/products/' + productId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct, deleteProduct };","map":{"version":3,"sources":["/home/vrdevchris/rappaSite/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_REQUEST","axios","Axios","listProducts","category","searchKeyword","sortOrder","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","token","put","detailsProduct","productId","deleteProduct","delete","Authorization","success"],"mappings":"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","sourcesContent":["import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_SAVE_REQUEST,\n    PRODUCT_SAVE_SUCCESS,\n    PRODUCT_SAVE_FAIL,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_REQUEST,\n  } from '../constants/productConstants';\nimport axios from 'axios';\nimport Axios from 'axios';\n\n\n\nconst listProducts = (category = '', searchKeyword='', sortOrder='') => async (dispatch) => {\n\ntry{\n\n    dispatch({type: PRODUCT_LIST_REQUEST});\n    const {data} = await axios.get('/api/products?category=' + category\n    + \"&searchKeyword=\" + searchKeyword + \"&sortOrder=\" + sortOrder);\n    dispatch({type: PRODUCT_LIST_SUCCESS,  payload: data})\n}\ncatch(error){\n\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message});\n\n}\n    \n\n}\n\nconst saveProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({type: PRODUCT_SAVE_REQUEST, payload: product})\n        const {\n            userSignin: { userInfo },\n        } = getState();\n        if(!product._id){\n            const {data} = await Axios.post('/api/products', product, {\n                headers: {\n                    'Authorization' : 'Bearer ' + userInfo.token,\n            },\n            });\n\n        dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data})\n        } else {\n            const {data} = await Axios.put('/api/products/' + product._id, product, {\n                headers: {\n                    'Authorization' : 'Bearer ' + userInfo.token,\n            },\n            });\n\n        dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data})\n        }\n        \n    \n        \n    } catch (error) {\n        dispatch({type: PRODUCT_SAVE_FAIL, payload: error.message})\n    }\n};\n\nconst detailsProduct = (productId) => async (dispatch) => {\n    try{\n        dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\n        const {data} = await axios.get(\"/api/products/\" + productId);\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message});\n    }\n}\n\nconst deleteProduct = (productId) => async (dispatch, getState) => {\n    try {\n      const {\n        userSignin: { userInfo },\n      } = getState();\n      dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\n      const { data } = await axios.delete('/api/products/' + productId, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token,\n        },\n      });\n      dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data, success: true });\n    } catch (error) {\n      dispatch({ type: PRODUCT_DELETE_FAIL, payload: error.message });\n    }\n  };\n\n\n\nexport { listProducts, detailsProduct, saveProduct, deleteProduct };"]},"metadata":{},"sourceType":"module"}