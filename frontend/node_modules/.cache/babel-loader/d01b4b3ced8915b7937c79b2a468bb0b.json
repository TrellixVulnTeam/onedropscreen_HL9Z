{"ast":null,"code":"import Axios from 'axios';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, MY_ORDER_LIST_REQUEST, MY_ORDER_LIST_SUCCESS, MY_ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELETE_SUCCESS, ORDER_DELETE_REQUEST, ORDER_DELETE_FAIL } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data: {\n        data: newOrder\n      }\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: newOrder\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n}; // Subscribe\n\nexport const subOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/orders/sub`, paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MY_ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get('/api/orders/mine', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: MY_ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: MY_ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get('/api/orders', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELETE_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.delete('/api/orders/' + orderId, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/vrdevchris/rappaSite/frontend/src/actions/orderActions.js"],"names":["Axios","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_PAY_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","MY_ORDER_LIST_REQUEST","MY_ORDER_LIST_SUCCESS","MY_ORDER_LIST_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELETE_SUCCESS","ORDER_DELETE_REQUEST","ORDER_DELETE_FAIL","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","newOrder","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult","put","_id","subOrder","listMyOrders","listOrders","deleteOrder","delete"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  MY_ORDER_LIST_REQUEST,\n  MY_ORDER_LIST_SUCCESS,\n  MY_ORDER_LIST_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELETE_SUCCESS,\n  ORDER_DELETE_REQUEST,\n  ORDER_DELETE_FAIL,\n\n} from '../constants/orderConstants';\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n  try {\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    const { data: { data: newOrder } } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: newOrder });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const payOrder = (order, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_PAY_FAIL, payload: message });\n  }\n};\n\n// Subscribe\n\nexport const subOrder = (order, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: ORDER_PAY_REQUEST, payload: { order, paymentResult } });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.put(`/api/orders/sub`, paymentResult, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_PAY_FAIL, payload: message });\n  }\n};\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  \n  try {\n    dispatch({ type:  MY_ORDER_LIST_REQUEST });\n  const { userSignin: { userInfo } } = getState();\n    \n    const { data } = await Axios.get('/api/orders/mine', {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: MY_ORDER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: MY_ORDER_LIST_FAIL, payload: message });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  \n  try {\n    dispatch({ type: ORDER_LIST_REQUEST });\n  const { userSignin: { userInfo } } = getState();\n    \n    const { data } = await Axios.get('/api/orders', {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_LIST_FAIL, payload: message });\n  }\n};\n\nexport const deleteOrder = (orderId) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.delete('/api/orders/' + orderId, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DELETE_FAIL, payload: message });\n  }\n};"]},"metadata":{},"sourceType":"module"}