{"ast":null,"code":"import _regeneratorRuntime from\"/home/vrdevchris/rappaSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/vrdevchris/rappaSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{CART_ADD_ITEM,CART_REMOVE_ITEM,CART_SAVE_PAYMENT,CART_SAVE_SHIPPING}from'../constants/cartConstants';import Cookie from'js-cookie';var addToCart=function addToCart(productId,qty){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var _yield$axios$get,data,_getState,cartItems;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"/api/products/\"+productId);case 2:_yield$axios$get=_context.sent;data=_yield$axios$get.data;_getState=getState(),cartItems=_getState.cart.cartItems;try{dispatch({type:CART_ADD_ITEM,payload:{product:data._id,name:data.name,image:data.image,price:data.price,countInStock:data.countInStock,qty:qty}});localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems));}catch(error){}case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};var removeFromCart=function removeFromCart(productId){return function(dispatch,getState){dispatch({type:CART_REMOVE_ITEM,payload:productId});var _getState2=getState(),cartItems=_getState2.cart.cartItems;Cookie.set(\"cartItems\",JSON.stringify(cartItems));};};var saveShipping=function saveShipping(data){return function(dispatch){dispatch({type:CART_SAVE_SHIPPING,payload:data});};};var savePayment=function savePayment(data){return function(dispatch){dispatch({type:CART_SAVE_PAYMENT,payload:data});};};export{addToCart,removeFromCart,saveShipping,savePayment};","map":{"version":3,"sources":["/home/vrdevchris/rappaSite/frontend/src/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_PAYMENT","CART_SAVE_SHIPPING","Cookie","addToCart","productId","qty","dispatch","getState","get","data","cartItems","cart","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","error","removeFromCart","set","saveShipping","savePayment"],"mappings":"iTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,CAAwBC,gBAAxB,CAA0CC,iBAA1C,CAA6DC,kBAA7D,KAAuF,4BAAvF,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,SAAD,CAAYC,GAAZ,iGAAoB,iBAAOC,QAAP,CAAiBC,QAAjB,sLAEfV,CAAAA,KAAK,CAACW,GAAN,CAAU,iBAAmBJ,SAA7B,CAFe,uCAE7BK,IAF6B,kBAE7BA,IAF6B,WAGJF,QAAQ,EAHJ,CAGpBG,SAHoB,WAG5BC,IAH4B,CAGpBD,SAHoB,CAKpC,GAAG,CACDJ,QAAQ,CAAC,CAACM,IAAI,CAAEd,aAAP,CAAsBe,OAAO,CAAC,CACrCC,OAAO,CAAEL,IAAI,CAACM,GADuB,CAErCC,IAAI,CAAEP,IAAI,CAACO,IAF0B,CAGrCC,KAAK,CAAER,IAAI,CAACQ,KAHyB,CAIrCC,KAAK,CAAET,IAAI,CAACS,KAJyB,CAKrCC,YAAY,CAAEV,IAAI,CAACU,YALkB,CAMrCd,GAAG,CAAHA,GANqC,CAA9B,CAAD,CAAR,CASAe,YAAY,CAACC,OAAb,CACE,WADF,CAEEC,IAAI,CAACC,SAAL,CAAehB,QAAQ,GAAGI,IAAX,CAAgBD,SAA/B,CAFF,EAIC,CAAC,MAAOc,KAAP,CAAc,CAEjB,CArBmC,sDAApB,oEAAlB,CAwBA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACrB,SAAD,QAAe,UAACE,QAAD,CAAWC,QAAX,CAAwB,CAC5DD,QAAQ,CAAC,CAAEM,IAAI,CAAEb,gBAAR,CAA0Bc,OAAO,CAAET,SAAnC,CAAD,CAAR,CAD4D,eAE5BG,QAAQ,EAFoB,CAE5CG,SAF4C,YAEpDC,IAFoD,CAE5CD,SAF4C,CAG5DR,MAAM,CAACwB,GAAP,CAAW,WAAX,CAAwBJ,IAAI,CAACC,SAAL,CAAeb,SAAf,CAAxB,EACD,CAJsB,EAAvB,CAMA,GAAMiB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAClB,IAAD,QAAU,UAACH,QAAD,CAAc,CAC3CA,QAAQ,CAAC,CAAEM,IAAI,CAAEX,kBAAR,CAA4BY,OAAO,CAAEJ,IAArC,CAAD,CAAR,CACD,CAFoB,EAArB,CAIA,GAAMmB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACnB,IAAD,QAAU,UAACH,QAAD,CAAc,CAC1CA,QAAQ,CAAC,CAAEM,IAAI,CAAEZ,iBAAR,CAA2Ba,OAAO,CAAEJ,IAApC,CAAD,CAAR,CACD,CAFmB,EAApB,CAKA,OAASN,SAAT,CAAoBsB,cAApB,CAAoCE,YAApC,CAAkDC,WAAlD","sourcesContent":["import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT, CART_SAVE_SHIPPING } from '../constants/cartConstants';\nimport Cookie from 'js-cookie';\n\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n\n  const {data} = await axios.get(\"/api/products/\" + productId);\n  const { cart: { cartItems } } = getState();\n\n  try{\n    dispatch({type: CART_ADD_ITEM, payload:{\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }});\n    \n    localStorage.setItem(\n      'cartItems',\n      JSON.stringify(getState().cart.cartItems))\n    \n    } catch (error) {\n    \n  }\n}\n\nconst removeFromCart = (productId) => (dispatch, getState) => {\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });  \n  const { cart: { cartItems } } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n}\n\nconst saveShipping = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_SHIPPING, payload: data});\n}\n\nconst savePayment = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_PAYMENT, payload: data});\n}\n\n\nexport { addToCart, removeFromCart, saveShipping, savePayment }"]},"metadata":{},"sourceType":"module"}