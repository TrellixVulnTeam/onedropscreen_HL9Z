{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT, CART_SAVE_SHIPPING } from '../constants/cartConstants';\nimport Cookie from 'js-cookie';\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(\"/api/products/\" + productId);\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n\n  try {\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty\n      }\n    });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n  } catch (error) {}\n};\n\nconst removeFromCart = productId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n};\n\nconst saveShipping = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING,\n    payload: data\n  });\n};\n\nconst savePayment = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT,\n    payload: data\n  });\n};\n\nexport { addToCart, removeFromCart, saveShipping, savePayment };","map":{"version":3,"sources":["/home/vrdevchris/rappaSite/frontend/src/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_PAYMENT","CART_SAVE_SHIPPING","Cookie","addToCart","productId","qty","dispatch","getState","data","get","cart","cartItems","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","error","removeFromCart","set","saveShipping","savePayment"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,EAA0CC,iBAA1C,EAA6DC,kBAA7D,QAAuF,4BAAvF;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAGA,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAoB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAElE,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMX,KAAK,CAACY,GAAN,CAAU,mBAAmBL,SAA7B,CAArB;AACA,QAAM;AAAEM,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,MAA0BJ,QAAQ,EAAxC;;AAEA,MAAG;AACDD,IAAAA,QAAQ,CAAC;AAACM,MAAAA,IAAI,EAAEd,aAAP;AAAsBe,MAAAA,OAAO,EAAC;AACrCC,QAAAA,OAAO,EAAEN,IAAI,CAACO,GADuB;AAErCC,QAAAA,IAAI,EAAER,IAAI,CAACQ,IAF0B;AAGrCC,QAAAA,KAAK,EAAET,IAAI,CAACS,KAHyB;AAIrCC,QAAAA,KAAK,EAAEV,IAAI,CAACU,KAJyB;AAKrCC,QAAAA,YAAY,EAAEX,IAAI,CAACW,YALkB;AAMrCd,QAAAA;AANqC;AAA9B,KAAD,CAAR;AASAe,IAAAA,YAAY,CAACC,OAAb,CACE,WADF,EAEEC,IAAI,CAACC,SAAL,CAAehB,QAAQ,GAAGG,IAAX,CAAgBC,SAA/B,CAFF;AAIC,GAdH,CAcI,OAAOa,KAAP,EAAc,CAEjB;AACF,CAtBD;;AAwBA,MAAMC,cAAc,GAAIrB,SAAD,IAAe,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEb,gBAAR;AAA0Bc,IAAAA,OAAO,EAAET;AAAnC,GAAD,CAAR;AACA,QAAM;AAAEM,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,MAA0BJ,QAAQ,EAAxC;AACAL,EAAAA,MAAM,CAACwB,GAAP,CAAW,WAAX,EAAwBJ,IAAI,CAACC,SAAL,CAAeZ,SAAf,CAAxB;AACD,CAJD;;AAMA,MAAMgB,YAAY,GAAInB,IAAD,IAAWF,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEX,kBAAR;AAA4BY,IAAAA,OAAO,EAAEL;AAArC,GAAD,CAAR;AACD,CAFD;;AAIA,MAAMoB,WAAW,GAAIpB,IAAD,IAAWF,QAAD,IAAc;AAC1CA,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEZ,iBAAR;AAA2Ba,IAAAA,OAAO,EAAEL;AAApC,GAAD,CAAR;AACD,CAFD;;AAKA,SAASL,SAAT,EAAoBsB,cAApB,EAAoCE,YAApC,EAAkDC,WAAlD","sourcesContent":["import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT, CART_SAVE_SHIPPING } from '../constants/cartConstants';\nimport Cookie from 'js-cookie';\n\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n\n  const {data} = await axios.get(\"/api/products/\" + productId);\n  const { cart: { cartItems } } = getState();\n\n  try{\n    dispatch({type: CART_ADD_ITEM, payload:{\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }});\n    \n    localStorage.setItem(\n      'cartItems',\n      JSON.stringify(getState().cart.cartItems))\n    \n    } catch (error) {\n    \n  }\n}\n\nconst removeFromCart = (productId) => (dispatch, getState) => {\n  dispatch({ type: CART_REMOVE_ITEM, payload: productId });  \n  const { cart: { cartItems } } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n}\n\nconst saveShipping = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_SHIPPING, payload: data});\n}\n\nconst savePayment = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_PAYMENT, payload: data});\n}\n\n\nexport { addToCart, removeFromCart, saveShipping, savePayment }"]},"metadata":{},"sourceType":"module"}