{"ast":null,"code":"var _jsxFileName = \"/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { detailsOrder, payOrder } from '../actions/orderActions';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport Axios from 'axios';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OrderScreen(props) {\n  _s();\n\n  // Stripe Stuff\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const res = await axios.post('http://localhost:4000/pay', {\n      email: email\n    });\n    const clientSecret = res.data['client_secret'];\n    const result = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          email: userInfo.email\n        }\n      }\n    });\n\n    if (result.error) {\n      // Show error to your customer (e.g., insufficient funds)\n      console.log(result.error.message);\n    } else {\n      // The payment has been processed!\n      if (result.paymentIntent.status === 'succeeded') {\n        console.log('Money is in the bank!'); // Show a success message to your customer\n        // There's a risk of the customer closing the window before callback\n        // execution. Set up a webhook or plugin to listen for the\n        // payment_intent.succeeded event that handles any business critical\n        // post-payment actions.\n      }\n    }\n  }; // \n\n\n  const orderId = props.match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay,\n    error: errorPay\n  } = orderPay;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const {\n        data\n      } = await Axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\n      script.async = true;\n\n      script.onload = () => {\n        setSdkReady(true);\n      };\n\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || order && order._id !== orderId) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch(detailsOrder(orderId));\n    } else {\n      if (!order.isPaid) {\n        if (!window.paypal) {\n          addPayPalScript();\n        } else {\n          setSdkReady(true);\n        }\n      }\n    }\n  }, [dispatch, orderId, sdkReady, successPay, order, successPay]);\n\n  const handleSuccessPayment = paymentResult => {\n    dispatch(payOrder(order, paymentResult));\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"placeorder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeorder-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Shipping\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [order.shipping.address, \", \", order.shipping.city, \", \", order.shipping.state, order.shipping.zipCode, \", \", order.shipping.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: order.isDelivered ? /*#__PURE__*/_jsxDEV(MessageBox, {\n              variant: \"success\",\n              children: [\"Delivered at \", order.deliveredAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(MessageBox, {\n              variant: \"danger\",\n              children: \"Not Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Payment Method: \", order.payment.paymentMethod]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: order.isPaid ? \"Paid at \" + order.paidAt : \"Not Paid.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"cart-list-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Shopping Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Cart is empty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this) : order.orderItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.image,\n                  alt: \"product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-name\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/product/\" + item.product,\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Qty: \", item.qty]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-price\",\n                children: [\"$\", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 23\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeorder-action\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmit,\n              children: \"Pay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), !order.isPaid && /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"placeorder-actions-payment\",\n            children: !sdkReady ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [errorPay && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: errorPay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), loadingPay && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(PayPalButton, {\n                amount: order.totalPrice,\n                onSuccess: handleSuccessPayment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Order Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"$\", order.itemsPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"$\", order.shippingPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Tax\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"$\", order.taxPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Order Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"$\", order.totalPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderScreen, \"bS1ttJnqc2r28ECA2qyomkH1x58=\", true, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","detailsOrder","payOrder","PayPalButton","Axios","LoadingBox","MessageBox","ORDER_PAY_RESET","OrderScreen","props","stripe","useStripe","elements","useElements","handleSubmit","event","res","axios","post","email","clientSecret","data","result","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","userInfo","error","console","log","message","paymentIntent","status","orderId","match","params","id","sdkReady","setSdkReady","orderDetails","state","order","loading","orderPay","loadingPay","success","successPay","errorPay","dispatch","addPayPalScript","get","script","document","createElement","type","src","async","onload","body","appendChild","_id","isPaid","window","paypal","handleSuccessPayment","paymentResult","shipping","address","city","zipCode","country","isDelivered","deliveredAt","payment","paymentMethod","paidAt","orderItems","length","map","item","image","product","name","qty","price","totalPrice","itemsPrice","shippingPrice","taxPrice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { detailsOrder, payOrder } from '../actions/orderActions';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport Axios from 'axios';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\n\n\nfunction OrderScreen(props) {\n\n\n  // Stripe Stuff\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (event) => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const res = await axios.post('http://localhost:4000/pay', {email: email});\n\n    const clientSecret = res.data['client_secret'];\n\n    const result = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          email: userInfo.email,\n        },\n      },\n    });\n\n    if (result.error) {\n      // Show error to your customer (e.g., insufficient funds)\n      console.log(result.error.message);\n    } else {\n      // The payment has been processed!\n      if (result.paymentIntent.status === 'succeeded') {\n        console.log('Money is in the bank!');\n        // Show a success message to your customer\n        // There's a risk of the customer closing the window before callback\n        // execution. Set up a webhook or plugin to listen for the\n        // payment_intent.succeeded event that handles any business critical\n        // post-payment actions.\n      }\n    }\n  };\n\n\n  // \n  const orderId = props.match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay, error: errorPay } = orderPay;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data } = await Axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (\n      !order ||\n      successPay ||\n      (order && order._id !== orderId)\n    ) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch(detailsOrder(orderId));\n    } else {\n      if (!order.isPaid) {\n        if (!window.paypal) {\n          addPayPalScript();\n        } else {\n          setSdkReady(true);\n        }\n      }\n    }\n  }, [dispatch, orderId, sdkReady, successPay, order, successPay]);\n\n  const handleSuccessPayment = (paymentResult) => {\n    dispatch(payOrder(order, paymentResult));\n  }\n\n\n  return loading ? (\n    <LoadingBox />\n    ) : error ? (\n      <MessageBox variant=\"danger\">{error}</MessageBox>\n    ) : (\n\n    <div>\n      <div className=\"placeorder\">\n        <div className=\"placeorder-info\">\n          <div>\n            <h3>\n              Shipping\n          </h3>\n            <div>\n              {order.shipping.address}, {order.shipping.city}, {order.shipping.state}\n              {order.shipping.zipCode}, {order.shipping.country}\n            </div>\n            <div>\n              {order.isDelivered ? (\n                <MessageBox variant=\"success\">Delivered at {order.deliveredAt}</MessageBox>\n              ) : (\n                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n              )}\n            </div>\n          </div>\n          <div>\n            <h3>Payment</h3>\n            <div>\n              Payment Method: {order.payment.paymentMethod}\n            </div>\n            <div>\n              {order.isPaid ? \"Paid at \" + order.paidAt : \"Not Paid.\"}\n            </div>\n          </div>\n          <div>\n            <ul className=\"cart-list-container\">\n              <li>\n                <h3>\n                  Shopping Cart\n          </h3>\n                <div>\n                  Price\n          </div>\n              </li>\n              {\n                order.orderItems.length === 0 ?\n                  <div>\n                    Cart is empty\n          </div>\n                  :\n                  order.orderItems.map(item =>\n                    <li key={item._id}>\n                      <div className=\"cart-image\">\n                        <img src={item.image} alt=\"product\" />\n                      </div>\n                      <div className=\"cart-name\">\n                        <div>\n                          <Link to={\"/product/\" + item.product}>\n                            {item.name}\n                          </Link>\n\n                        </div>\n                        <div>\n                          Qty: {item.qty}\n                        </div>\n                      </div>\n                      <div className=\"cart-price\">\n                        ${item.price}\n                      </div>\n                    </li>\n                  )\n              }\n            </ul>\n          </div>\n\n\n        </div>\n        <div className=\"placeorder-action\">\n          <ul>\n            {/* Stripe Stuff */}\n            <li>\n            <button onClick={handleSubmit}>\n            Pay\n            </button>\n            </li>\n\n            {/*  */}\n            {!order.isPaid && (\n            <li className=\"placeorder-actions-payment\">\n              {!sdkReady ? (\n                <div>Loading...</div>\n              ) : (\n                <>\n                {errorPay && (\n                  <div>{errorPay}</div>\n                )}\n                {loadingPay && (\n                  <div>Loading...</div>\n                )}\n                <PayPalButton amount={order.totalPrice} onSuccess={handleSuccessPayment}></PayPalButton>\n                \n                </>\n              )}\n            </li>\n            )}\n            <li>\n              <h3>Order Summary</h3>\n            </li>\n            <li>\n              <div>Items</div>\n              <div>${order.itemsPrice}</div>\n            </li>\n            <li>\n              <div>Shipping</div>\n              <div>${order.shippingPrice}</div>\n            </li>\n            <li>\n              <div>Tax</div>\n              <div>${order.taxPrice}</div>\n            </li>\n            <li>\n              <div>Order Total</div>\n              <div>${order.totalPrice}</div>\n            </li>\n          </ul>\n\n\n\n        </div>\n\n      </div>\n    </div>\n\n)}\n\nexport default OrderScreen;\n"]},"metadata":{},"sourceType":"module"}