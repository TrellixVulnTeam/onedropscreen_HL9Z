{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT, CART_SAVE_SHIPPING } from '../constants/cartConstants';\nimport Cookie from 'js-cookie';\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty\n      }\n    });\n    const {\n      cart: {\n        cartItems\n      }\n    } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n  } catch (error) {}\n};\n\nconst removeFromCart = productId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n};\n\nconst saveShipping = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING,\n    payload: data\n  });\n};\n\nconst savePayment = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT,\n    payload: data\n  });\n};\n\nexport { addToCart, removeFromCart, saveShipping, savePayment };","map":{"version":3,"sources":["/home/vrdevchris/rappaSite/frontend/src/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_PAYMENT","CART_SAVE_SHIPPING","Cookie","addToCart","productId","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countInStock","cart","cartItems","set","JSON","stringify","error","removeFromCart","saveShipping","savePayment"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,EAA0CC,iBAA1C,EAA6DC,kBAA7D,QAAuF,4BAAvF;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAGA,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAoB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMX,KAAK,CAACY,GAAN,CAAU,mBAAmBL,SAA7B,CAArB;AACAE,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAEZ,aAAP;AAAsBa,MAAAA,OAAO,EAAC;AACnCC,QAAAA,OAAO,EAAEJ,IAAI,CAACK,GADqB;AAEnCC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAFwB;AAGnCC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHuB;AAInCC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAJuB;AAKnCC,QAAAA,YAAY,EAAET,IAAI,CAACS,YALgB;AAMnCZ,QAAAA;AANmC;AAA9B,KAAD,CAAR;AASA,UAAM;AAAEa,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,QAA0BZ,QAAQ,EAAxC;AACAL,IAAAA,MAAM,CAACkB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AAED,GAdH,CAcI,OAAOI,KAAP,EAAc,CAEf;AACF,CAlBL;;AAmBI,MAAMC,cAAc,GAAIpB,SAAD,IAAe,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEX,gBAAR;AAA0BY,IAAAA,OAAO,EAAEP;AAAnC,GAAD,CAAR;AAEA,QAAM;AAAEc,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAAR,MAA0BZ,QAAQ,EAAxC;AACAL,EAAAA,MAAM,CAACkB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AACD,CALD;;AAOA,MAAMM,YAAY,GAAIjB,IAAD,IAAWF,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAET,kBAAR;AAA4BU,IAAAA,OAAO,EAAEH;AAArC,GAAD,CAAR;AACD,CAFD;;AAIA,MAAMkB,WAAW,GAAIlB,IAAD,IAAWF,QAAD,IAAc;AAC1CA,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEV,iBAAR;AAA2BW,IAAAA,OAAO,EAAEH;AAApC,GAAD,CAAR;AACD,CAFD;;AAKJ,SAASL,SAAT,EAAoBqB,cAApB,EAAoCC,YAApC,EAAkDC,WAAlD","sourcesContent":["import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT, CART_SAVE_SHIPPING } from '../constants/cartConstants';\nimport Cookie from 'js-cookie';\n\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n    try{\n        const {data} = await axios.get(\"/api/products/\" + productId);\n        dispatch({type: CART_ADD_ITEM, payload:{\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }});\n\n        const { cart: { cartItems } } = getState();\n        Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n    \n      } catch (error) {\n    \n      }\n    }\n    const removeFromCart = (productId) => (dispatch, getState) => {\n      dispatch({ type: CART_REMOVE_ITEM, payload: productId });\n    \n      const { cart: { cartItems } } = getState();\n      Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n    }\n\n    const saveShipping = (data) => (dispatch) => {\n      dispatch({ type: CART_SAVE_SHIPPING, payload: data});\n    }\n\n    const savePayment = (data) => (dispatch) => {\n      dispatch({ type: CART_SAVE_PAYMENT, payload: data});\n    }\n\n\nexport { addToCart, removeFromCart, saveShipping, savePayment }"]},"metadata":{},"sourceType":"module"}