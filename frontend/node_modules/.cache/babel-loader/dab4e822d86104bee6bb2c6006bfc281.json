{"ast":null,"code":"var _jsxFileName = \"/home/vrdevchris/photoPortfolio/frontend/src/Screens/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listItems } from '../actions/itemActions';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles'; // used to style components\n\nimport { useStyles } from '../components/cardStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nexport default function HomeScreen() {\n  _s();\n\n  // classes, items(dogs), dispatch, endpoint\n  const classes = useStyles();\n  const itemList = useSelector(state => state.itemList);\n  const {\n    items,\n    loading,\n    error\n  } = itemList;\n  const dispatch = useDispatch();\n  const numDogs = 15;\n  const dogUrl = 'https://dog.ceo/api/breeds/image/random'; // dog enpoint is only hit numDogs times for each render\n\n  useEffect(() => {\n    dispatch(listItems(dogUrl, numDogs));\n    return () => {//\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.loading,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          sx: {\n            py: 3\n          },\n          maxWidth: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            sx: {\n              width: '100%'\n            },\n            children: items.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 3,\n              md: 2.40,\n              height: 275,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  padding: '0'\n                },\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  className: classes.cardContent,\n                  children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                    className: classes.cardImage,\n                    component: \"img\",\n                    image: item.message,\n                    alt: \"random\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    className: classes.titleText,\n                    children: \"Card Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(HomeScreen, \"6mRumsMz57Ofu4LMMAWvhGKVXwM=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/home/vrdevchris/photoPortfolio/frontend/src/Screens/HomeScreen.js"],"names":["React","useEffect","useSelector","useDispatch","listItems","Card","CardMedia","CardContent","Typography","CssBaseline","Grid","Container","createTheme","ThemeProvider","useStyles","theme","HomeScreen","classes","itemList","state","items","loading","error","dispatch","numDogs","dogUrl","py","width","map","item","index","height","display","flexDirection","padding","cardContent","cardImage","message","titleText"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listItems } from '../actions/itemActions';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\n// used to style components\r\nimport { useStyles } from '../components/cardStyles';\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function HomeScreen () {\r\n\r\n  // classes, items(dogs), dispatch, endpoint\r\n  const classes = useStyles();\r\n  const itemList = useSelector(state => state.itemList);\r\n  const {items, loading, error} = itemList;\r\n  const dispatch = useDispatch();\r\n  const numDogs = 15;\r\n  const dogUrl = 'https://dog.ceo/api/breeds/image/random';\r\n\r\n  // dog enpoint is only hit numDogs times for each render\r\n  useEffect(() => {\r\n      dispatch(listItems(dogUrl, numDogs));\r\n      return () => {\r\n        //\r\n      }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n  <>\r\n    {loading ? (\r\n      <div className = {classes.loading}><h1>Loading...</h1></div>\r\n    ) : error? (\r\n      <div>{error}</div>\r\n    ) : (\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <main>\r\n          <Container sx={{ py: 3 }} maxWidth=\"100%\">\r\n            <Grid container spacing={1} sx={{width: '100%'}}>\r\n              {items.map((item, index) => (\r\n                <Grid item key={index} xs={12} sm={3} md={2.40} height={275}>\r\n                  <Card\r\n                  sx={{ height: '100%', display: 'flex', flexDirection: 'column', padding: '0'}}\r\n                  >\r\n                    <CardContent\r\n                      className = {classes.cardContent}\r\n                    >\r\n                      <CardMedia\r\n                          className = {classes.cardImage}\r\n                          component=\"img\"\r\n                          image={item.message}\r\n                          alt=\"random\"\r\n                      />\r\n                      <Typography className = {classes.titleText}>\r\n                        Card Title\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Container>\r\n        </main>\r\n      </ThemeProvider>\r\n    )}\r\n  </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}