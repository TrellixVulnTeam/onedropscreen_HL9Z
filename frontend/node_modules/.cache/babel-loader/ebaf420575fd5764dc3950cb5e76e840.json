{"ast":null,"code":"import _slicedToArray from\"/home/vrdevchris/rappaSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Link}from'react-router-dom';import{useSelector,useDispatch}from'react-redux';import React,{useEffect,useState}from'react';import{saveShipping}from'../actions/cartActions';import CheckoutSteps from'../components/CheckoutSteps';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ShippingScreen(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),state=_useState6[0],setState=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),zipCode=_useState8[0],setZipcode=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),country=_useState10[0],setCountry=_useState10[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();//find a way to overwrite the information if the customer wants to change shipping address\ndispatch(saveShipping({address:address,city:city,state:state,zipCode:zipCode,country:country}));props.history.push('payment');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"div\",{className:\"form\",children:/*#__PURE__*/_jsx(\"form\",{onSubmit:submitHandler,children:/*#__PURE__*/_jsxs(\"ul\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Shipping Details\"})}),/*#__PURE__*/_jsx(\"li\",{}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"address\",id:\"address\",onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"city\",id:\"city\",onChange:function onChange(e){return setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"state\",children:\"State\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"state\",id:\"state\",onChange:function onChange(e){return setState(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"zipCode\",children:\"Zip Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"zipCode\",id:\"zipCode\",onChange:function onChange(e){return setZipcode(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"country\",children:\"Country\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"country\",id:\"country\",onChange:function onChange(e){return setCountry(e.target.value);}})]}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button primary\",children:\" Continue \"})})]})})})]});}export default ShippingScreen;","map":{"version":3,"sources":["/home/vrdevchris/rappaSite/frontend/src/Screens/ShippingScreen.js"],"names":["Link","useSelector","useDispatch","React","useEffect","useState","saveShipping","CheckoutSteps","ShippingScreen","props","address","setAddress","city","setCity","state","setState","zipCode","setZipcode","country","setCountry","dispatch","submitHandler","e","preventDefault","history","push","target","value"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { saveShipping } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nfunction ShippingScreen (props) {\n\n    const [address, setAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [zipCode, setZipcode] = useState('');\n    const [country, setCountry] = useState('');\n  \n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        //find a way to overwrite the information if the customer wants to change shipping address\n        \n        dispatch(saveShipping({address, city, state, zipCode, country}));\n        props.history.push('payment');\n    }\n\n    return <div>\n        <CheckoutSteps step1 step2></CheckoutSteps>\n        <div className=\"form\">\n            <form onSubmit={submitHandler}>\n                <ul className=\"form-container\">\n                    <li>\n                        <h2>Shipping Details</h2>\n                    </li>\n                    <li>\n\n                    </li>\n                    <li>\n                        <label htmlFor=\"name\">\n                            Address\n                        </label>\n                        <input type=\"text\" name=\"address\" id=\"address\" onChange={(e) => setAddress(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"city\">\n                            City\n                        </label>\n                        <input type=\"text\" name=\"city\" id=\"city\" onChange={(e) => setCity(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"state\">\n                            State\n                        </label>\n                        <input type=\"text\" name=\"state\" id=\"state\" onChange={(e) => setState(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"zipCode\">\n                            Zip Code\n                        </label>\n                        <input type=\"text\" name=\"zipCode\" id=\"zipCode\" onChange={(e) => setZipcode(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <label htmlFor=\"country\">\n                            Country\n                        </label>\n                        <input type=\"text\" name=\"country\" id=\"country\" onChange={(e) => setCountry(e.target.value)}></input>\n                    </li>\n                    <li>\n                        <button type=\"submit\" className=\"button primary\"> Continue </button>\n                    </li>\n                </ul>\n            </form>\n        </div>\n    </div>\n\n}\n\n\n\nexport default ShippingScreen;\n"]},"metadata":{},"sourceType":"module"}