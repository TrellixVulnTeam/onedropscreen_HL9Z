{"ast":null,"code":"import _regeneratorRuntime from\"/home/vrdevchris/rappaSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/vrdevchris/rappaSite/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Axios from'axios';import Cookie from'js-cookie';import{USER_SIGNIN_REQUEST,USER_SIGNIN_SUCCESS,USER_SIGNIN_FAIL,USER_REGISTER_REQUEST,USER_REGISTER_SUCCESS,USER_REGISTER_FAIL,USER_LOGOUT,USER_UPDATE_FAIL,USER_UPDATE_SUCCESS,USER_UPDATE_REQUEST}from'../constants/userConstants';var signin=function signin(email,password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$Axios$post,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:USER_SIGNIN_REQUEST,payload:{email:email,password:password}});_context.prev=1;_context.next=4;return Axios.post(\"/api/users/signin\",{email:email,password:password});case 4:_yield$Axios$post=_context.sent;data=_yield$Axios$post.data;dispatch({type:USER_SIGNIN_SUCCESS,payload:data});Cookie.set('userInfo',JSON.stringify(data));_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);dispatch({type:USER_SIGNIN_FAIL,payload:_context.t0.message});case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};var register=function register(name,email,password){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$Axios$post2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:USER_REGISTER_REQUEST,payload:{name:name,email:email,password:password}});_context2.prev=1;_context2.next=4;return Axios.post(\"/api/users/register\",{name:name,email:email,password:password});case 4:_yield$Axios$post2=_context2.sent;data=_yield$Axios$post2.data;dispatch({type:USER_REGISTER_SUCCESS,payload:data});Cookie.set('userInfo',JSON.stringify(data));_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](1);dispatch({type:USER_REGISTER_FAIL,payload:_context2.t0.message});case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[1,10]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};var logout=function logout(){return function(dispatch){Cookie.remove(\"userInfo\");dispatch({type:USER_LOGOUT});};};var update=function update(_ref3){var userId=_ref3.userId,name=_ref3.name,email=_ref3.email,password=_ref3.password;return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var _getState,userInfo,_yield$Axios$put,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_getState=getState(),userInfo=_getState.userSignin.userInfo;dispatch({type:USER_UPDATE_REQUEST,payload:{userId:userId,name:name,email:email,password:password}});_context3.prev=2;_context3.next=5;return Axios.put(\"/api/users/\"+userId,{name:name,email:email,password:password},{headers:{Authorization:'Bearer '+userInfo.token}});case 5:_yield$Axios$put=_context3.sent;data=_yield$Axios$put.data;dispatch({type:USER_UPDATE_SUCCESS,payload:data});Cookie.set('userInfo',JSON.stringify(data));_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](2);dispatch({type:USER_UPDATE_FAIL,payload:_context3.t0.message});case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[2,11]]);}));return function(_x3,_x4){return _ref4.apply(this,arguments);};}();};export{signin,register,logout,update};","map":{"version":3,"sources":["/home/vrdevchris/rappaSite/frontend/src/actions/userActions.js"],"names":["Axios","Cookie","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGOUT","USER_UPDATE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_REQUEST","signin","email","password","dispatch","type","payload","post","data","set","JSON","stringify","message","register","name","logout","remove","update","userId","getState","userInfo","userSignin","put","headers","Authorization","token"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport Cookie from 'js-cookie';\n\nimport {\n    USER_SIGNIN_REQUEST,\n    USER_SIGNIN_SUCCESS,\n    USER_SIGNIN_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_LOGOUT,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_REQUEST,\n} from '../constants/userConstants';\n\n\nconst signin = (email, password) => async (dispatch) => {\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}})\n    try {\n        const {data} = await Axios.post(\"/api/users/signin\", {email, password})\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        Cookie.set('userInfo', JSON.stringify(data));\n    } catch (error){\n        dispatch({type: USER_SIGNIN_FAIL, payload: error.message});\n    }\n}\n\nconst register = (name, email, password) => async (dispatch) => {\n    dispatch({type: USER_REGISTER_REQUEST, payload: {name, email, password}})\n    try {\n        const {data} = await Axios.post(\"/api/users/register\", {name, email, password})\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\n        Cookie.set('userInfo', JSON.stringify(data));\n    } catch (error){\n        dispatch({type: USER_REGISTER_FAIL, payload: error.message});\n    }\n}\n\nconst logout = () => (dispatch) =>{\n    Cookie.remove(\"userInfo\");\n    dispatch({ type: USER_LOGOUT});\n}\n\nconst update = ({userId, name, email, password}) => async (dispatch, getState) => {\n    const { userSignin: { userInfo } } = getState();\n    dispatch({type: USER_UPDATE_REQUEST, payload: {userId, name, email, password}})\n    try {\n        const { data } = await Axios.put(\"/api/users/\" + userId, \n        {name, email, password}, {\n        headers:\n            {\n                 Authorization : 'Bearer ' + userInfo.token\n            }\n        });\n        dispatch({type: USER_UPDATE_SUCCESS, payload: data});\n        Cookie.set('userInfo', JSON.stringify(data));\n    } catch (error){\n        dispatch({type: USER_UPDATE_FAIL, payload: error.message});\n    }\n}\n\n\nexport { signin, register, logout, update };"]},"metadata":{},"sourceType":"module"}