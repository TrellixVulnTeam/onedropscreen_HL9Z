{"ast":null,"code":"var _jsxFileName = \"/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreenStripe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { detailsOrder, payOrder } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\nimport StripePayment from '../components/StripePayment';\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport CardInput from '../components/CardInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OrderScreen(props) {\n  _s();\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const stripe = useStripe();\n  const elements = useElements();\n  const email = userInfo.email;\n  const orderId = props.match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay,\n    error: errorPay\n  } = orderPay;\n  const dispatch = useDispatch(); // Stripe Payment Stuff\n\n  const stripeId = useState('');\n\n  const handleSubmit = async event => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const res = await axios.post(`/${order._id}/pay`, {\n      email: email\n    });\n    const clientSecret = res.data['client_secret'];\n    const result = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          email: userInfo.email\n        }\n      }\n    });\n\n    if (result.error) {\n      // Show error to your customer (e.g., insufficient funds)\n      console.log(result.error.message);\n    } else {\n      // The payment has been processed!\n      if (result.paymentIntent.status === 'succeeded') {\n        handleSuccessPayment(result.paymentIntent); // console.log(result.paymentIntent);\n      }\n    }\n  };\n\n  const handleSubmitSub = async () => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const result = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n      billing_details: {\n        email: email\n      }\n    });\n\n    if (stripeId) {\n      console.log(stripeId);\n    }\n\n    if (result.error) {\n      console.log(result.error.message);\n    } else {\n      const res = await axios.post('http://localhost:5000/sub', {\n        'payment_method': result.paymentMethod.id,\n        'email': email\n      }); // eslint-disable-next-line camelcase\n\n      const {\n        client_secret,\n        status\n      } = res.data;\n\n      if (status === 'requires_action') {\n        stripe.confirmCardPayment(client_secret).then(function (result) {\n          if (result.error) {\n            console.log('There was an issue!');\n            console.log(result.error); // Display error message in your UI.\n            // The card was declined (i.e. insufficient funds, card has expired, etc)\n          } else {\n            console.log('You got the money!');\n          }\n        });\n      } else {\n        console.log(\"payment success\");\n        handleSuccessSub(result.paymentIntent); // No additional information was needed\n        // Show a success message to your customer\n      }\n    }\n  }; // End Stripe Payment Stuff\n\n\n  useEffect(() => {\n    if (!order || successPay || order && order._id !== orderId) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch(detailsOrder(orderId));\n    } else {\n      setSdkReady(true);\n      stripeId.state = order.stripeID;\n      console.log(stripeId);\n    }\n  }, [dispatch, orderId, sdkReady, successPay, order]);\n\n  const handleSuccessPayment = paymentResult => {\n    dispatch(payOrder(order, paymentResult));\n  };\n\n  const handleSuccessSub = paymentResult => {\n    dispatch(payOrder(order, paymentResult));\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"placeorder\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeorder-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Shipping\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [order.shipping.address, \", \", order.shipping.city, \", \", order.shipping.state, order.shipping.zipCode, \", \", order.shipping.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: order.isDelivered ? /*#__PURE__*/_jsxDEV(MessageBox, {\n              variant: \"success\",\n              children: [\"Delivered at \", order.deliveredAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(MessageBox, {\n              variant: \"danger\",\n              children: \"Not Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Payment Method: \", order.payment.paymentMethod]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: order.isPaid ? \"Paid at \" + order.paidAt : \"Not Paid.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"cart-list-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Shopping Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Cart is empty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this) : order.orderItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.image,\n                  alt: \"product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-name\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/product/\" + item.product,\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Qty: \", item.qty]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cart-price\",\n                children: [\"$\", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 23\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeorder-action\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [!order.isPaid && /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"placeorder-actions-payment\",\n            children: !sdkReady ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stripe-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                  className: \"stripe-form\",\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"email-form\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"email\",\n                        children: \"Email:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        type: \"email\",\n                        value: email,\n                        name: \"email\",\n                        id: \"email\",\n                        children: userInfo.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: /*#__PURE__*/_jsxDEV(CardInput, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stripe-pay\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"stripe-button button primary\",\n                    onClick: handleSubmit,\n                    children: \"Pay\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"stripe-button button primary\",\n                    onClick: () => handleSubmitSub(stripeId),\n                    children: \"Subscribe\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Order Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"$\", order.itemsPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"$\", order.shippingPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Tax\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"$\", order.taxPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Order Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"$\", order.totalPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderScreen, \"FmV6f8t78yWE5/aXiEPxZ41jqsA=\", false, function () {\n  return [useSelector, useStripe, useElements, useSelector, useSelector, useDispatch];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["/home/vrdevchris/rappaSite/frontend/src/Screens/OrderScreenStripe.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","detailsOrder","payOrder","LoadingBox","MessageBox","ORDER_PAY_RESET","StripePayment","useStripe","useElements","CardElement","axios","CardInput","OrderScreen","props","userSignin","state","userInfo","stripe","elements","email","orderId","match","params","id","sdkReady","setSdkReady","orderDetails","order","loading","error","orderPay","loadingPay","success","successPay","errorPay","dispatch","stripeId","handleSubmit","event","res","post","_id","clientSecret","data","result","confirmCardPayment","payment_method","card","getElement","billing_details","console","log","message","paymentIntent","status","handleSuccessPayment","handleSubmitSub","createPaymentMethod","type","paymentMethod","client_secret","then","handleSuccessSub","stripeID","paymentResult","shipping","address","city","zipCode","country","isDelivered","deliveredAt","payment","isPaid","paidAt","orderItems","length","map","item","image","product","name","qty","price","itemsPrice","shippingPrice","taxPrice","totalPrice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { detailsOrder, payOrder } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\nimport  StripePayment from '../components/StripePayment';\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport CardInput from '../components/CardInput';\n\n\n\n\nfunction OrderScreen(props) {\n\n  const userSignin = useSelector(state => state.userSignin) \n  const { userInfo } = userSignin; \n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const email = userInfo.email;\n\n  const orderId = props.match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay, error: errorPay } = orderPay;\n  const dispatch = useDispatch();\n\n\n  // Stripe Payment Stuff\n  const stripeId  = useState('');\n\n  const handleSubmit = async (event)  => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    const res = await axios.post(`/${order._id}/pay`, {email: email});\n\n    const clientSecret = res.data['client_secret'];\n\n    const result = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          email: userInfo.email,\n        },\n      },\n    });\n\n    if (result.error) {\n      // Show error to your customer (e.g., insufficient funds)\n      console.log(result.error.message);\n    } else {\n      // The payment has been processed!\n      if (result.paymentIntent.status === 'succeeded') {\n        handleSuccessPayment(result.paymentIntent);\n        // console.log(result.paymentIntent);\n      }\n    }\n  };\n\n  const handleSubmitSub = async () => {\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    const result = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement),\n      billing_details: {\n        email: email,\n      },\n    });\n    \n    if(stripeId){\n      console.log(stripeId);\n    }\n\n    if (result.error) {\n      console.log(result.error.message);\n    } else {\n      const res = await axios.post('http://localhost:5000/sub',  \n      {'payment_method': result.paymentMethod.id,\n       'email': email,\n\n      });\n      \n      // eslint-disable-next-line camelcase\n      const {client_secret, status} = res.data;\n\n      if (status === 'requires_action') {\n        stripe.confirmCardPayment(client_secret).then(function(result) {\n          if (result.error) {\n            console.log('There was an issue!');\n            console.log(result.error);\n            // Display error message in your UI.\n            // The card was declined (i.e. insufficient funds, card has expired, etc)\n          } else {\n            console.log('You got the money!');\n          }\n        });\n      } else {\n        console.log(\"payment success\");\n        handleSuccessSub(result.paymentIntent);   \n        // No additional information was needed\n        // Show a success message to your customer\n      }\n    }\n  };\n\n  // End Stripe Payment Stuff\n\n\n\n  useEffect(() => {\n    if (\n      !order ||\n      successPay ||\n      (order && order._id !== orderId)\n    ) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch(detailsOrder(orderId));\n    } else {\n      setSdkReady(true);\n      stripeId.state = (order.stripeID);\n      console.log(stripeId)\n    }}, [dispatch, orderId, sdkReady, successPay, order]);\n\n  const handleSuccessPayment = (paymentResult) => {\n    dispatch(payOrder(order, paymentResult));\n  }\n\n  const handleSuccessSub = (paymentResult) => {\n    dispatch(payOrder(order, paymentResult));\n  }\n\n\n\n\n\n  return loading ? (\n    <LoadingBox />\n    ) : error ? (\n      <MessageBox variant=\"danger\">{error}</MessageBox>\n    ) : (\n    <div>\n      <div className=\"placeorder\">\n        <div className=\"placeorder-info\">\n          <div>\n            <h3>\n              Shipping\n          </h3>\n            <div>\n              {order.shipping.address}, {order.shipping.city}, {order.shipping.state}\n              {order.shipping.zipCode}, {order.shipping.country}\n            </div>\n            <div>\n              {order.isDelivered ? (\n                <MessageBox variant=\"success\">Delivered at {order.deliveredAt}</MessageBox>\n              ) : (\n                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n              )}\n            </div>\n          </div>\n          <div>\n            <h3>Payment</h3>\n            <div>\n              Payment Method: {order.payment.paymentMethod}\n            </div>\n            <div>\n              {order.isPaid ? \"Paid at \" + order.paidAt : \"Not Paid.\"}\n            </div>\n          </div>\n          <div>\n            <ul className=\"cart-list-container\">\n              <li>\n                <h3>\n                  Shopping Cart\n          </h3>\n                <div>\n                  Price\n          </div>\n              </li>\n              {\n                order.orderItems.length === 0 ?\n                  <div>\n                    Cart is empty\n          </div>\n                  :\n                  order.orderItems.map(item =>\n                    <li key={item._id}>\n                      <div className=\"cart-image\">\n                        <img src={item.image} alt=\"product\" />\n                      </div>\n                      <div className=\"cart-name\">\n                        <div>\n                          <Link to={\"/product/\" + item.product}>\n                            {item.name}\n                          </Link>\n\n                        </div>\n                        <div>\n                          Qty: {item.qty}\n                        </div>\n                      </div>\n                      <div className=\"cart-price\">\n                        ${item.price}\n                      </div>\n                    </li>\n                  )\n              }\n            </ul>\n          </div>\n\n\n        </div>\n        <div className=\"placeorder-action\">\n          <ul>\n            {!order.isPaid && (\n            <li className=\"placeorder-actions-payment\">\n              {!sdkReady ? (\n                <div>Loading...</div>\n              ) : (\n                <>\n                {/* {errorPay && (\n                  <div>{errorPay}</div>\n                )}\n                {loadingPay && (\n                  <div>Loading...</div>\n                )} */}\n\n                {/* Stripe JSX */}\n                <div className=\"stripe-container\">\n                  <form className=\"stripe-form\">\n                    <ul>\n                      <li className=\"email-form\">\n                        <label htmlFor=\"email\">\n                          Email:\n                        </label>\n                        <p type=\"email\" value={email} name=\"email\" id=\"email\">{userInfo.email}</p>\n                      </li>\n                      <li>\n                        <CardInput />\n                      </li>\n                    </ul>\n                  </form>\n                  <div className=\"stripe-pay\">\n                    <button className=\"stripe-button button primary\" onClick={handleSubmit}>\n                      Pay\n                    </button>\n                    <button className=\"stripe-button button primary\" onClick={() => handleSubmitSub(stripeId)}>\n                      Subscribe\n                    </button>\n                  </div>\n                </div>\n                {/* End Stripe JSX */}\n                {/* <StripePayment amount={order.totalPrice} successPay={props.handleSuccessPayment}/> */}\n                {/* <PayPalButton amount={order.totalPrice} onSuccess={handleSuccessPayment}></PayPalButton> */}\n                \n                </>\n              )}\n            </li>\n            )}\n            <li>\n              <h3>Order Summary</h3>\n            </li>\n            <li>\n              <div>Items</div>\n              <div>${order.itemsPrice}</div>\n            </li>\n            <li>\n              <div>Shipping</div>\n              <div>${order.shippingPrice}</div>\n            </li>\n            <li>\n              <div>Tax</div>\n              <div>${order.taxPrice}</div>\n            </li>\n            <li>\n              <div>Order Total</div>\n              <div>${order.totalPrice}</div>\n            </li>\n          </ul>\n\n\n\n        </div>\n\n      </div>\n    </div>\n\n)}\n\nexport default OrderScreen;\n"]},"metadata":{},"sourceType":"module"}